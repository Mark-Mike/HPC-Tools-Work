   1              		.file	"dgesv_gauss-elim_gcc_optimized.c"
   2              	# GNU C17 (Gentoo 10.1.0-r2 p3) version 10.1.0 (x86_64-pc-linux-gnu)
   3              	#	compiled by GNU C version 10.1.0, GMP version 6.2.0, MPFR version 4.1.0, MPC version 1.1.0, isl v
   4              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   5              	# options passed:  dgesv_gauss-elim_gcc_optimized.c -march=icelake-server
   6              	# -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a -mcx16 -msahf
   7              	# -mmovbe -maes -msha -mpclmul -mpopcnt -mabm -mno-lwp -mfma -mno-fma4
   8              	# -mno-xop -mbmi -msgx -mbmi2 -mpconfig -mwbnoinvd -mno-tbm -mavx -mavx2
   9              	# -msse4.2 -msse4.1 -mlzcnt -mno-rtm -mno-hle -mrdrnd -mf16c -mfsgsbase
  10              	# -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mavx512f -mno-avx512er
  11              	# -mavx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt -mxsavec -mxsaves
  12              	# -mavx512dq -mavx512bw -mavx512vl -mavx512ifma -mavx512vbmi
  13              	# -mno-avx5124fmaps -mno-avx5124vnniw -mclwb -mno-mwaitx -mno-clzero -mpku
  14              	# -mrdpid -mgfni -mno-shstk -mavx512vbmi2 -mavx512vnni -mvaes -mvpclmulqdq
  15              	# -mavx512bitalg -mno-movdiri -mno-movdir64b -mno-waitpkg -mno-cldemote
  16              	# -mno-ptwrite -mno-avx512bf16 -mno-enqcmd -mno-avx512vp2intersect
  17              	# --param=l1-cache-size=48 --param=l1-cache-line-size=64
  18              	# --param=l2-cache-size=49152 -mtune=generic -g -O3 -fverbose-asm
  19              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  20              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  21              	# -fallocation-dce -fasynchronous-unwind-tables -fauto-inc-dec
  22              	# -fbranch-count-reg -fcaller-saves -fcode-hoisting
  23              	# -fcombine-stack-adjustments -fcompare-elim -fcprop-registers
  24              	# -fcrossjumping -fcse-follow-jumps -fdefer-pop
  25              	# -fdelete-null-pointer-checks -fdevirtualize -fdevirtualize-speculatively
  26              	# -fdwarf2-cfi-asm -fearly-inlining -feliminate-unused-debug-symbols
  27              	# -feliminate-unused-debug-types -fexpensive-optimizations
  28              	# -fforward-propagate -ffp-int-builtin-inexact -ffunction-cse -fgcse
  29              	# -fgcse-after-reload -fgcse-lm -fgnu-unique -fguess-branch-probability
  30              	# -fhoist-adjacent-loads -fident -fif-conversion -fif-conversion2
  31              	# -findirect-inlining -finline -finline-atomics -finline-functions
  32              	# -finline-functions-called-once -finline-small-functions -fipa-bit-cp
  33              	# -fipa-cp -fipa-cp-clone -fipa-icf -fipa-icf-functions -fipa-icf-variables
  34              	# -fipa-profile -fipa-pure-const -fipa-ra -fipa-reference
  35              	# -fipa-reference-addressable -fipa-sra -fipa-stack-alignment -fipa-vrp
  36              	# -fira-hoist-pressure -fira-share-save-slots -fira-share-spill-slots
  37              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  38              	# -fleading-underscore -flifetime-dse -floop-interchange
  39              	# -floop-unroll-and-jam -flra-remat -fmath-errno -fmerge-constants
  40              	# -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  41              	# -foptimize-sibling-calls -foptimize-strlen -fpartial-inlining
  42              	# -fpeel-loops -fpeephole -fpeephole2 -fplt -fpredictive-commoning
  43              	# -fprefetch-loop-arrays -free -freg-struct-return -freorder-blocks
  44              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  45              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  46              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  47              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  48              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  49              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  50              	# -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  51              	# -fsplit-loops -fsplit-paths -fsplit-wide-types -fssa-backprop
  52              	# -fssa-phiopt -fstack-protector-strong -fstdarg-opt -fstore-merging
  53              	# -fstrict-aliasing -fstrict-volatile-bitfields -fsync-libcalls
  54              	# -fthread-jumps -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp
  55              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  56              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  57              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  58              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  59              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  60              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  61              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  62              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  63              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time -funswitch-loops
  64              	# -funwind-tables -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  65              	# -fversion-loops-for-strides -fzero-initialized-in-bss
  66              	# -m128bit-long-double -m64 -m80387 -mabm -madx -maes -malign-stringops
  67              	# -mavx -mavx2 -mavx256-split-unaligned-load -mavx256-split-unaligned-store
  68              	# -mavx512bitalg -mavx512bw -mavx512cd -mavx512dq -mavx512f -mavx512ifma
  69              	# -mavx512vbmi -mavx512vbmi2 -mavx512vl -mavx512vnni -mavx512vpopcntdq
  70              	# -mbmi -mbmi2 -mclflushopt -mclwb -mcx16 -mf16c -mfancy-math-387 -mfma
  71              	# -mfp-ret-in-387 -mfsgsbase -mfxsr -mgfni -mglibc -mhle -mieee-fp
  72              	# -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpconfig -mpku -mpopcnt
  73              	# -mprfchw -mpush-args -mrdpid -mrdrnd -mrdseed -mred-zone -msahf -msgx
  74              	# -msha -msse -msse2 -msse3 -msse4 -msse4.1 -msse4.2 -mssse3 -mstv
  75              	# -mtls-direct-seg-refs -mvaes -mvpclmulqdq -mvzeroupper -mwbnoinvd -mxsave
  76              	# -mxsavec -mxsaveopt -mxsaves
  77              	
  78              		.text
  79              	.Ltext0:
  80              		.p2align 4
  81              		.globl	generate_matrix
  83              	generate_matrix:
  84              	.LVL0:
  85              	.LFB50:
  86              		.file 1 "dgesv_gauss-elim_gcc_optimized.c"
   1:dgesv_gauss-elim_gcc_optimized.c **** #include <time.h>
   2:dgesv_gauss-elim_gcc_optimized.c **** #include <stdio.h>
   3:dgesv_gauss-elim_gcc_optimized.c **** #include <stdlib.h>
   4:dgesv_gauss-elim_gcc_optimized.c **** #include <math.h>
   5:dgesv_gauss-elim_gcc_optimized.c **** #include <string.h>
   6:dgesv_gauss-elim_gcc_optimized.c **** #include <openblas/lapacke.h>
   7:dgesv_gauss-elim_gcc_optimized.c **** //#include <mkl_lapacke.h>
   8:dgesv_gauss-elim_gcc_optimized.c **** 
   9:dgesv_gauss-elim_gcc_optimized.c **** double *generate_matrix(int size)
  10:dgesv_gauss-elim_gcc_optimized.c **** {
  87              		.loc 1 10 1 view -0
  88              		.cfi_startproc
  11:dgesv_gauss-elim_gcc_optimized.c ****   int i;
  89              		.loc 1 11 3 view .LVU1
  12:dgesv_gauss-elim_gcc_optimized.c ****   double *matrix = (double *) malloc(sizeof(double) * size * size);
  90              		.loc 1 12 3 view .LVU2
  91              	# dgesv_gauss-elim_gcc_optimized.c:10: {
  10:dgesv_gauss-elim_gcc_optimized.c ****   int i;
  92              		.loc 1 10 1 is_stmt 0 view .LVU3
  93 0000 4863FF   		movslq	%edi, %rdi	# tmp112,
  10:dgesv_gauss-elim_gcc_optimized.c ****   int i;
  94              		.loc 1 10 1 view .LVU4
  95 0003 4154     		pushq	%r12	#
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 12, -16
  98 0005 55       		pushq	%rbp	#
  99              		.cfi_def_cfa_offset 24
 100              		.cfi_offset 6, -24
 101 0006 53       		pushq	%rbx	#
 102              		.cfi_def_cfa_offset 32
 103              		.cfi_offset 3, -32
 104              	# dgesv_gauss-elim_gcc_optimized.c:10: {
  10:dgesv_gauss-elim_gcc_optimized.c ****   int i;
 105              		.loc 1 10 1 view .LVU5
 106 0007 4889FB   		movq	%rdi, %rbx	#,
 107              	# dgesv_gauss-elim_gcc_optimized.c:12:   double *matrix = (double *) malloc(sizeof(double) * size *
 108              		.loc 1 12 60 view .LVU6
 109 000a 480FAFFF 		imulq	%rdi, %rdi	# _1, tmp97
 110              	.LVL1:
 111              	# dgesv_gauss-elim_gcc_optimized.c:16:   for (i = 0; i < size * size; i++) {
  13:dgesv_gauss-elim_gcc_optimized.c **** 
  14:dgesv_gauss-elim_gcc_optimized.c ****   //srand(1);
  15:dgesv_gauss-elim_gcc_optimized.c **** 
  16:dgesv_gauss-elim_gcc_optimized.c ****   for (i = 0; i < size * size; i++) {
 112              		.loc 1 16 24 view .LVU7
 113 000e 0FAFDB   		imull	%ebx, %ebx	# size,
 114              	.LVL2:
 115              	# dgesv_gauss-elim_gcc_optimized.c:12:   double *matrix = (double *) malloc(sizeof(double) * size *
  12:dgesv_gauss-elim_gcc_optimized.c **** 
 116              		.loc 1 12 31 view .LVU8
 117 0011 48C1E703 		salq	$3, %rdi	#, tmp98
 118 0015 E8000000 		call	malloc@PLT	#
 118      00
 119              	.LVL3:
 120 001a 4989C4   		movq	%rax, %r12	# tmp113, <retval>
 121              	.LVL4:
 122              		.loc 1 16 3 is_stmt 1 view .LVU9
 123              		.loc 1 16 15 view .LVU10
 124              	# dgesv_gauss-elim_gcc_optimized.c:16:   for (i = 0; i < size * size; i++) {
 125              		.loc 1 16 3 is_stmt 0 view .LVU11
 126 001d 85DB     		testl	%ebx, %ebx	# _22
 127 001f 7445     		je	.L1	#,
 128 0021 4889C5   		movq	%rax, %rbp	# <retval>, ivtmp.23
 129 0024 488D1CD8 		leaq	(%rax,%rbx,8), %rbx	#, _31
 130              	.LVL5:
 131 0028 0F1F8400 		.p2align 4,,10
 131      00000000 
 132              		.p2align 3
 133              	.L3:
  17:dgesv_gauss-elim_gcc_optimized.c ****     matrix[i] = rand() % 100;
 134              		.loc 1 17 5 is_stmt 1 discriminator 3 view .LVU12
 135              	# dgesv_gauss-elim_gcc_optimized.c:17:     matrix[i] = rand() % 100;
 136              		.loc 1 17 17 is_stmt 0 discriminator 3 view .LVU13
 137 0030 E8000000 		call	rand@PLT	#
 137      00
 138              	.LVL6:
 139              	# dgesv_gauss-elim_gcc_optimized.c:17:     matrix[i] = rand() % 100;
 140              		.loc 1 17 15 discriminator 3 view .LVU14
 141 0035 C5F157C9 		vxorpd	%xmm1, %xmm1, %xmm1	# tmp118
 142              	# dgesv_gauss-elim_gcc_optimized.c:16:   for (i = 0; i < size * size; i++) {
  16:dgesv_gauss-elim_gcc_optimized.c ****     matrix[i] = rand() % 100;
 143              		.loc 1 16 3 discriminator 3 view .LVU15
 144 0039 4883C508 		addq	$8, %rbp	#, ivtmp.23
 145              	.LVL7:
 146              	# dgesv_gauss-elim_gcc_optimized.c:17:     matrix[i] = rand() % 100;
 147              		.loc 1 17 17 discriminator 3 view .LVU16
 148 003d 89C2     		movl	%eax, %edx	# tmp114, _4
 149              	# dgesv_gauss-elim_gcc_optimized.c:17:     matrix[i] = rand() % 100;
 150              		.loc 1 17 24 discriminator 3 view .LVU17
 151 003f 4898     		cltq
 152 0041 4869C01F 		imulq	$1374389535, %rax, %rax	#, _4, tmp104
 152      85EB51
 153 0048 89D1     		movl	%edx, %ecx	# _4, tmp107
 154 004a C1F91F   		sarl	$31, %ecx	#, tmp107
 155 004d 48C1F825 		sarq	$37, %rax	#, tmp106
 156 0051 29C8     		subl	%ecx, %eax	# tmp107, tmp102
 157 0053 6BC064   		imull	$100, %eax, %eax	#, tmp102, tmp108
 158 0056 29C2     		subl	%eax, %edx	# tmp108, tmp109
 159              	# dgesv_gauss-elim_gcc_optimized.c:17:     matrix[i] = rand() % 100;
 160              		.loc 1 17 15 discriminator 3 view .LVU18
 161 0058 C5F32AC2 		vcvtsi2sdl	%edx, %xmm1, %xmm0	# tmp109, tmp118, tmp116
 162 005c C5FB1145 		vmovsd	%xmm0, -8(%rbp)	# tmp110, MEM[base: _10, offset: 0B]
 162      F8
  16:dgesv_gauss-elim_gcc_optimized.c ****     matrix[i] = rand() % 100;
 163              		.loc 1 16 32 is_stmt 1 discriminator 3 view .LVU19
 164              	.LVL8:
  16:dgesv_gauss-elim_gcc_optimized.c ****     matrix[i] = rand() % 100;
 165              		.loc 1 16 15 discriminator 3 view .LVU20
 166              	# dgesv_gauss-elim_gcc_optimized.c:16:   for (i = 0; i < size * size; i++) {
  16:dgesv_gauss-elim_gcc_optimized.c ****     matrix[i] = rand() % 100;
 167              		.loc 1 16 3 is_stmt 0 discriminator 3 view .LVU21
 168 0061 4839DD   		cmpq	%rbx, %rbp	# _31, ivtmp.23
 169 0064 75CA     		jne	.L3	#,
 170              	.L1:
 171              	# dgesv_gauss-elim_gcc_optimized.c:21: }
  18:dgesv_gauss-elim_gcc_optimized.c ****   }
  19:dgesv_gauss-elim_gcc_optimized.c **** 
  20:dgesv_gauss-elim_gcc_optimized.c ****   return matrix;
  21:dgesv_gauss-elim_gcc_optimized.c **** }
 172              		.loc 1 21 1 view .LVU22
 173 0066 4C89E0   		movq	%r12, %rax	# <retval>,
 174 0069 5B       		popq	%rbx	#
 175              		.cfi_def_cfa_offset 24
 176 006a 5D       		popq	%rbp	#
 177              		.cfi_def_cfa_offset 16
 178 006b 415C     		popq	%r12	#
 179              		.cfi_def_cfa_offset 8
 180              	.LVL9:
 181              		.loc 1 21 1 view .LVU23
 182 006d C3       		ret	
 183              		.cfi_endproc
 184              	.LFE50:
 186 006e 6690     		.p2align 4
 187              		.globl	is_nearly_equal
 189              	is_nearly_equal:
 190              	.LVL10:
 191              	.LFB51:
  22:dgesv_gauss-elim_gcc_optimized.c **** 
  23:dgesv_gauss-elim_gcc_optimized.c **** int is_nearly_equal(double x, double y)
  24:dgesv_gauss-elim_gcc_optimized.c **** {
 192              		.loc 1 24 1 is_stmt 1 view -0
 193              		.cfi_startproc
  25:dgesv_gauss-elim_gcc_optimized.c ****   const double epsilon = 1e-5 /* some small number */;
 194              		.loc 1 25 3 view .LVU25
  26:dgesv_gauss-elim_gcc_optimized.c ****   return abs(x - y) <= epsilon * abs(x);
 195              		.loc 1 26 3 view .LVU26
 196              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
 197              		.loc 1 26 16 is_stmt 0 view .LVU27
 198 0070 C5FB5CC9 		vsubsd	%xmm1, %xmm0, %xmm1	# tmp110, x, tmp95
 199              	.LVL11:
 200              		.loc 1 26 16 view .LVU28
 201 0074 C5E857D2 		vxorps	%xmm2, %xmm2, %xmm2	# tmp111
 202              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
 203              		.loc 1 26 10 view .LVU29
 204 0078 C5FB2CC1 		vcvttsd2sil	%xmm1, %eax	# tmp95, tmp96
 205 007c 89C2     		movl	%eax, %edx	# tmp96, tmp97
 206 007e F7DA     		negl	%edx	# tmp97
 207 0080 39D0     		cmpl	%edx, %eax	# tmp97, tmp96
 208 0082 0F4CC2   		cmovl	%edx, %eax	# tmp96,, tmp97, tmp98
 209              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
 210              		.loc 1 26 21 view .LVU30
 211 0085 C5EB2AC8 		vcvtsi2sdl	%eax, %xmm2, %xmm1	# tmp98, tmp111, tmp112
 212              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
 213              		.loc 1 26 34 view .LVU31
 214 0089 C5FB2CC0 		vcvttsd2sil	%xmm0, %eax	# x, tmp100
 215 008d 89C2     		movl	%eax, %edx	# tmp100, tmp101
 216 008f F7DA     		negl	%edx	# tmp101
 217 0091 39D0     		cmpl	%edx, %eax	# tmp101, tmp100
 218 0093 0F4CC2   		cmovl	%edx, %eax	# tmp100,, tmp101, tmp102
 219              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
 220              		.loc 1 26 32 view .LVU32
 221 0096 C5EB2AD0 		vcvtsi2sdl	%eax, %xmm2, %xmm2	# tmp102, tmp111, tmp113
 222 009a C5EB5915 		vmulsd	.LC0(%rip), %xmm2, %xmm2	#, tmp103, tmp104
 222      00000000 
 223              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
 224              		.loc 1 26 21 view .LVU33
 225 00a2 31C0     		xorl	%eax, %eax	# tmp106
 226 00a4 C5F92FD1 		vcomisd	%xmm1, %xmm2	# tmp99, tmp104
 227 00a8 0F93C0   		setnb	%al	#, tmp106
 228              	# dgesv_gauss-elim_gcc_optimized.c:28: }
  27:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
  28:dgesv_gauss-elim_gcc_optimized.c **** }
 229              		.loc 1 28 1 view .LVU34
 230 00ab C3       		ret	
 231              		.cfi_endproc
 232              	.LFE51:
 234 00ac 0F1F4000 		.p2align 4
 235              		.globl	check_result
 237              	check_result:
 238              	.LVL12:
 239              	.LFB52:
  29:dgesv_gauss-elim_gcc_optimized.c **** 
  30:dgesv_gauss-elim_gcc_optimized.c **** int check_result(double *bref, double *b, int size)
  31:dgesv_gauss-elim_gcc_optimized.c **** {
 240              		.loc 1 31 1 is_stmt 1 view -0
 241              		.cfi_startproc
  32:dgesv_gauss-elim_gcc_optimized.c ****   int i;
 242              		.loc 1 32 3 view .LVU36
  33:dgesv_gauss-elim_gcc_optimized.c **** 
  34:dgesv_gauss-elim_gcc_optimized.c ****   for(i = 0; i < size*size; i++) {
 243              		.loc 1 34 3 view .LVU37
 244              		.loc 1 34 14 view .LVU38
 245              	# dgesv_gauss-elim_gcc_optimized.c:34:   for(i = 0; i < size*size; i++) {
 246              		.loc 1 34 22 is_stmt 0 view .LVU39
 247 00b0 0FAFD2   		imull	%edx, %edx	# tmp114, _26
 248              	.LVL13:
 249              	# dgesv_gauss-elim_gcc_optimized.c:31: {
  31:dgesv_gauss-elim_gcc_optimized.c ****   int i;
 250              		.loc 1 31 1 view .LVU40
 251 00b3 4989F0   		movq	%rsi, %r8	# tmp113, b
 252              	# dgesv_gauss-elim_gcc_optimized.c:34:   for(i = 0; i < size*size; i++) {
 253              		.loc 1 34 3 view .LVU41
 254 00b6 85D2     		testl	%edx, %edx	# _26
 255 00b8 745E     		je	.L15	#,
 256 00ba 4863F2   		movslq	%edx, %rsi	# _26, _37
 257              	.LVL14:
 258              		.loc 1 34 3 view .LVU42
 259 00bd C5E857D2 		vxorps	%xmm2, %xmm2, %xmm2	# tmp115
 260 00c1 31D2     		xorl	%edx, %edx	# ivtmp.34
 261 00c3 C5FB101D 		vmovsd	.LC0(%rip), %xmm3	#, tmp111
 261      00000000 
 262 00cb EB0C     		jmp	.L14	#
 263              	.LVL15:
 264 00cd 0F1F00   		.p2align 4,,10
 265              		.p2align 3
 266              	.L20:
 267              		.loc 1 34 29 is_stmt 1 discriminator 2 view .LVU43
 268              		.loc 1 34 14 discriminator 2 view .LVU44
 269              	# dgesv_gauss-elim_gcc_optimized.c:34:   for(i = 0; i < size*size; i++) {
 270              		.loc 1 34 3 is_stmt 0 discriminator 2 view .LVU45
 271 00d0 4883C201 		addq	$1, %rdx	#, ivtmp.34
 272              	.LVL16:
 273              		.loc 1 34 3 discriminator 2 view .LVU46
 274 00d4 4839D6   		cmpq	%rdx, %rsi	# ivtmp.34, _37
 275 00d7 743F     		je	.L15	#,
 276              	.LVL17:
 277              	.L14:
  35:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 278              		.loc 1 35 5 is_stmt 1 view .LVU47
 279              	# dgesv_gauss-elim_gcc_optimized.c:35:     if (!is_nearly_equal(bref[i], b[i]))
 280              		.loc 1 35 10 is_stmt 0 view .LVU48
 281 00d9 C5FB1004 		vmovsd	(%rdi,%rdx,8), %xmm0	# MEM[base: bref_14(D), index: ivtmp.34_42, step: 8, offset: 0B], _6
 281      D7
 282              	.LVL18:
 283              	.LBB44:
 284              	.LBI44:
  23:dgesv_gauss-elim_gcc_optimized.c **** {
 285              		.loc 1 23 5 is_stmt 1 view .LVU49
 286              	.LBB45:
  25:dgesv_gauss-elim_gcc_optimized.c ****   return abs(x - y) <= epsilon * abs(x);
 287              		.loc 1 25 3 view .LVU50
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 288              		.loc 1 26 3 view .LVU51
 289              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 290              		.loc 1 26 16 is_stmt 0 view .LVU52
 291 00de C4C17B5C 		vsubsd	(%r8,%rdx,8), %xmm0, %xmm1	# MEM[base: b_13(D), index: ivtmp.34_42, step: 8, offset: 0B], _
 291      0CD0
 292              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 293              		.loc 1 26 10 view .LVU53
 294 00e4 C5FB2CC1 		vcvttsd2sil	%xmm1, %eax	# tmp99, tmp100
 295 00e8 89C1     		movl	%eax, %ecx	# tmp100, tmp101
 296 00ea F7D9     		negl	%ecx	# tmp101
 297 00ec 39C8     		cmpl	%ecx, %eax	# tmp101, tmp100
 298 00ee 0F4CC1   		cmovl	%ecx, %eax	# tmp100,, tmp101, tmp102
 299              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 300              		.loc 1 26 21 view .LVU54
 301 00f1 C5EB2AC8 		vcvtsi2sdl	%eax, %xmm2, %xmm1	# tmp102, tmp115, tmp116
 302              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 303              		.loc 1 26 34 view .LVU55
 304 00f5 C5FB2CC0 		vcvttsd2sil	%xmm0, %eax	# _6, tmp104
 305 00f9 89C1     		movl	%eax, %ecx	# tmp104, tmp105
 306 00fb F7D9     		negl	%ecx	# tmp105
 307 00fd 39C8     		cmpl	%ecx, %eax	# tmp105, tmp104
 308 00ff 0F4CC1   		cmovl	%ecx, %eax	# tmp104,, tmp105, tmp106
 309              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 310              		.loc 1 26 32 view .LVU56
 311 0102 C5EB2AC0 		vcvtsi2sdl	%eax, %xmm2, %xmm0	# tmp106, tmp115, tmp117
 312 0106 C5FB59C3 		vmulsd	%xmm3, %xmm0, %xmm0	# tmp111, tmp107, tmp108
 313              	.LBE45:
 314              	.LBE44:
 315              	# dgesv_gauss-elim_gcc_optimized.c:35:     if (!is_nearly_equal(bref[i], b[i]))
 316              		.loc 1 35 8 view .LVU57
 317 010a C5F92FC1 		vcomisd	%xmm1, %xmm0	# tmp103, tmp108
 318 010e 73C0     		jnb	.L20	#,
 319              	# dgesv_gauss-elim_gcc_optimized.c:36:       return 0;
  36:dgesv_gauss-elim_gcc_optimized.c ****       return 0;
 320              		.loc 1 36 14 view .LVU58
 321 0110 31C0     		xorl	%eax, %eax	# <retval>
 322              	# dgesv_gauss-elim_gcc_optimized.c:40: }
  37:dgesv_gauss-elim_gcc_optimized.c ****   }
  38:dgesv_gauss-elim_gcc_optimized.c **** 
  39:dgesv_gauss-elim_gcc_optimized.c ****   return 1;
  40:dgesv_gauss-elim_gcc_optimized.c **** }
 323              		.loc 1 40 1 view .LVU59
 324 0112 C3       		ret	
 325              	.LVL19:
 326              		.p2align 4,,10
 327 0113 0F1F4400 		.p2align 3
 327      00
 328              	.L15:
 329              	# dgesv_gauss-elim_gcc_optimized.c:39:   return 1;
  39:dgesv_gauss-elim_gcc_optimized.c **** }
 330              		.loc 1 39 10 view .LVU60
 331 0118 B8010000 		movl	$1, %eax	#, <retval>
 331      00
 332 011d C3       		ret	
 333              		.cfi_endproc
 334              	.LFE52:
 336              		.section	.rodata.str1.1,"aMS",@progbits,1
 337              	.LC6:
 338 0000 4D617468 		.string	"Mathematical Error!"
 338      656D6174 
 338      6963616C 
 338      20457272 
 338      6F722100 
 339              		.text
 340 011e 6690     		.p2align 4
 341              		.globl	my_dgesv
 343              	my_dgesv:
 344              	.LVL20:
 345              	.LFB53:
  41:dgesv_gauss-elim_gcc_optimized.c **** 
  42:dgesv_gauss-elim_gcc_optimized.c **** //extern void print_matrix( char* desc, MKL_INT m, MKL_INT n, double* a, MKL_INT lda );
  43:dgesv_gauss-elim_gcc_optimized.c **** 
  44:dgesv_gauss-elim_gcc_optimized.c **** /*int my_dgesv(int n, int nrhs, double *a, int lda, int *ipiv, double *b, int ldb)
  45:dgesv_gauss-elim_gcc_optimized.c **** {
  46:dgesv_gauss-elim_gcc_optimized.c **** 
  47:dgesv_gauss-elim_gcc_optimized.c ****   //Replace next line to use your own DGESV implementation
  48:dgesv_gauss-elim_gcc_optimized.c ****   LAPACKE_dgesv(LAPACK_ROW_MAJOR, n, nrhs, a, lda, ipiv, b, ldb);
  49:dgesv_gauss-elim_gcc_optimized.c **** 
  50:dgesv_gauss-elim_gcc_optimized.c **** }*/
  51:dgesv_gauss-elim_gcc_optimized.c **** 
  52:dgesv_gauss-elim_gcc_optimized.c **** /* n: nb rows of matrix a, nrhs: nb rows of matrix b, matrix a, lda: nb cols
  53:dgesv_gauss-elim_gcc_optimized.c ****   of matrix a, ipiv: Pivot indices, matrix b, ldb: nb cols of matrix b */
  54:dgesv_gauss-elim_gcc_optimized.c **** int my_dgesv(int n, int nrhs, double *a, int lda, int *ipiv, double *b, int ldb)
  55:dgesv_gauss-elim_gcc_optimized.c **** {
 346              		.loc 1 55 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		.loc 1 55 1 is_stmt 0 view .LVU62
 349 0120 4C8D5424 		leaq	8(%rsp), %r10	#,
 349      08
 350              		.cfi_def_cfa 10, 0
 351 0125 4883E4C0 		andq	$-64, %rsp	#,
 352              	# dgesv_gauss-elim_gcc_optimized.c:61:   double x_matrix[nrhs][ldb];
  56:dgesv_gauss-elim_gcc_optimized.c **** 
  57:dgesv_gauss-elim_gcc_optimized.c ****   //Replace next line to use your own DGESV implementation
  58:dgesv_gauss-elim_gcc_optimized.c ****   //LAPACKE_dgesv(LAPACK_ROW_MAJOR, n, nrhs, a, lda, ipiv, b, ldb);
  59:dgesv_gauss-elim_gcc_optimized.c **** 
  60:dgesv_gauss-elim_gcc_optimized.c ****   int u,i,j,k;//,n=4;
  61:dgesv_gauss-elim_gcc_optimized.c ****   double x_matrix[nrhs][ldb];
 353              		.loc 1 61 10 view .LVU63
 354 0129 4863F6   		movslq	%esi, %rsi	# tmp549, nrhs
 355              	# dgesv_gauss-elim_gcc_optimized.c:55: {
  55:dgesv_gauss-elim_gcc_optimized.c **** 
 356              		.loc 1 55 1 view .LVU64
 357 012c 4189FB   		movl	%edi, %r11d	# tmp548, n
 358 012f 41FF72F8 		pushq	-8(%r10)	#
 359 0133 C4E1F96E 		vmovq	%rdx, %xmm2	# tmp550, a
 359      D2
 360 0138 55       		pushq	%rbp	#
 361              		.cfi_escape 0x10,0x6,0x2,0x76,0
 362 0139 4889E5   		movq	%rsp, %rbp	#,
 363 013c 4157     		pushq	%r15	#
 364 013e 4156     		pushq	%r14	#
 365 0140 4155     		pushq	%r13	#
 366 0142 4154     		pushq	%r12	#
 367 0144 4152     		pushq	%r10	#
 368              		.cfi_escape 0xf,0x3,0x76,0x58,0x6
 369              		.cfi_escape 0x10,0xf,0x2,0x76,0x78
 370              		.cfi_escape 0x10,0xe,0x2,0x76,0x70
 371              		.cfi_escape 0x10,0xd,0x2,0x76,0x68
 372              		.cfi_escape 0x10,0xc,0x2,0x76,0x60
 373 0146 53       		pushq	%rbx	#
 374 0147 4881ECC0 		subq	$192, %rsp	#,
 374      000000
 375              		.cfi_escape 0x10,0x3,0x2,0x76,0x50
 376              	# dgesv_gauss-elim_gcc_optimized.c:55: {
  55:dgesv_gauss-elim_gcc_optimized.c **** 
 377              		.loc 1 55 1 view .LVU65
 378 014e 418B0A   		movl	(%r10), %ecx	# ldb, ldb
 379              	.LVL21:
  55:dgesv_gauss-elim_gcc_optimized.c **** 
 380              		.loc 1 55 1 view .LVU66
 381 0151 64488B04 		movq	%fs:40, %rax	# MEM[(<address-space-1> long unsigned int *)40B], tmp708
 381      25280000 
 381      00
 382 015a 488945C8 		movq	%rax, -56(%rbp)	# tmp708, D.55717
 383 015e 31C0     		xorl	%eax, %eax	# tmp708
  60:dgesv_gauss-elim_gcc_optimized.c ****   double x_matrix[nrhs][ldb];
 384              		.loc 1 60 3 is_stmt 1 view .LVU67
 385              		.loc 1 61 3 view .LVU68
 386              	.LVL22:
 387              	# dgesv_gauss-elim_gcc_optimized.c:61:   double x_matrix[nrhs][ldb];
 388              		.loc 1 61 10 is_stmt 0 view .LVU69
 389 0160 4863C1   		movslq	%ecx, %rax	# ldb, _2
 390              	.LVL23:
 391              		.loc 1 61 10 view .LVU70
 392 0163 480FAFF0 		imulq	%rax, %rsi	# _2, tmp319
 393              	.LVL24:
 394              		.loc 1 61 10 view .LVU71
 395 0167 48894588 		movq	%rax, -120(%rbp)	# _2, %sfp
 396 016b 488D14C5 		leaq	0(,%rax,8), %rdx	#, _122
 396      00000000 
 397              	.LVL25:
 398              		.loc 1 61 10 view .LVU72
 399 0173 488D04F5 		leaq	15(,%rsi,8), %rax	#, tmp322
 399      0F000000 
 400              	.LVL26:
 401              		.loc 1 61 10 view .LVU73
 402 017b 4883E0F0 		andq	$-16, %rax	#, tmp326
 403 017f 4829C4   		subq	%rax, %rsp	# tmp326,
 404              	# dgesv_gauss-elim_gcc_optimized.c:62:   double x[n], ratio;
  62:dgesv_gauss-elim_gcc_optimized.c ****   double x[n], ratio;
 405              		.loc 1 62 10 view .LVU74
 406 0182 4863C7   		movslq	%edi, %rax	# n, n
 407 0185 488D3CC5 		leaq	0(,%rax,8), %rdi	#, _127
 407      00000000 
 408              	.LVL27:
 409              		.loc 1 62 10 view .LVU75
 410 018d C461F96E 		vmovq	%rax, %xmm10	# n, n
 410      D0
 411              	# dgesv_gauss-elim_gcc_optimized.c:61:   double x_matrix[nrhs][ldb];
  61:dgesv_gauss-elim_gcc_optimized.c ****   double x[n], ratio;
 412              		.loc 1 61 10 view .LVU76
 413 0192 C461F96E 		vmovq	%rsp, %xmm11	#, tmp330
 413      DC
 414              	.LVL28:
 415              		.loc 1 62 3 is_stmt 1 view .LVU77
 416              	# dgesv_gauss-elim_gcc_optimized.c:62:   double x[n], ratio;
 417              		.loc 1 62 10 is_stmt 0 view .LVU78
 418 0197 488D470F 		leaq	15(%rdi), %rax	#, tmp333
 419              	# dgesv_gauss-elim_gcc_optimized.c:90:   double matrix[n][n+1];
  63:dgesv_gauss-elim_gcc_optimized.c **** 
  64:dgesv_gauss-elim_gcc_optimized.c ****   // requirements :
  65:dgesv_gauss-elim_gcc_optimized.c ****   // a_cols = b_rows (because each unknown should have its equivalent value in b in X_matrix)
  66:dgesv_gauss-elim_gcc_optimized.c ****   // a_rows = b_rows  b_cols = X_cols
  67:dgesv_gauss-elim_gcc_optimized.c ****   //So : n = a_rows = a_cols =  b_rows
  68:dgesv_gauss-elim_gcc_optimized.c **** 
  69:dgesv_gauss-elim_gcc_optimized.c ****   lda = n, nrhs = n;
  70:dgesv_gauss-elim_gcc_optimized.c **** 
  71:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("initial matrix a :\n");
  72:dgesv_gauss-elim_gcc_optimized.c ****   for(i=0;i<n;i++)
  73:dgesv_gauss-elim_gcc_optimized.c ****   {
  74:dgesv_gauss-elim_gcc_optimized.c **** 	for(j=0;j<lda;j++)
  75:dgesv_gauss-elim_gcc_optimized.c **** 	{
  76:dgesv_gauss-elim_gcc_optimized.c **** 	  printf( " %6.2f", a[i*n+j]);
  77:dgesv_gauss-elim_gcc_optimized.c **** 	}
  78:dgesv_gauss-elim_gcc_optimized.c **** 	printf("\n");
  79:dgesv_gauss-elim_gcc_optimized.c ****   }
  80:dgesv_gauss-elim_gcc_optimized.c ****   printf("initial matrix b :\n");
  81:dgesv_gauss-elim_gcc_optimized.c ****   for(i=0;i<nrhs;i++) 
  82:dgesv_gauss-elim_gcc_optimized.c ****   {
  83:dgesv_gauss-elim_gcc_optimized.c **** 	for(j=0;j<ldb;j++)
  84:dgesv_gauss-elim_gcc_optimized.c **** 	{
  85:dgesv_gauss-elim_gcc_optimized.c **** 	  printf( " %6.2f", b[i*n+j]);
  86:dgesv_gauss-elim_gcc_optimized.c **** 	}
  87:dgesv_gauss-elim_gcc_optimized.c **** 	printf("\n");
  88:dgesv_gauss-elim_gcc_optimized.c ****   }*/
  89:dgesv_gauss-elim_gcc_optimized.c **** 
  90:dgesv_gauss-elim_gcc_optimized.c ****   double matrix[n][n+1];
 420              		.loc 1 90 10 view .LVU79
 421 019b 488D5F08 		leaq	8(%rdi), %rbx	#, _131
 422              	# dgesv_gauss-elim_gcc_optimized.c:62:   double x[n], ratio;
  62:dgesv_gauss-elim_gcc_optimized.c **** 
 423              		.loc 1 62 10 view .LVU80
 424 019f 4889BD70 		movq	%rdi, -144(%rbp)	# _127, %sfp
 424      FFFFFF
 425 01a6 4883E0F0 		andq	$-16, %rax	#, tmp337
 426              	# dgesv_gauss-elim_gcc_optimized.c:90:   double matrix[n][n+1];
 427              		.loc 1 90 10 view .LVU81
 428 01aa 48899D68 		movq	%rbx, -152(%rbp)	# _131, %sfp
 428      FFFFFF
 429              	# dgesv_gauss-elim_gcc_optimized.c:62:   double x[n], ratio;
  62:dgesv_gauss-elim_gcc_optimized.c **** 
 430              		.loc 1 62 10 view .LVU82
 431 01b1 4829C4   		subq	%rax, %rsp	# tmp337,
 432              	.LVL29:
 433              	# dgesv_gauss-elim_gcc_optimized.c:90:   double matrix[n][n+1];
 434              		.loc 1 90 21 view .LVU83
 435 01b4 418D4301 		leal	1(%r11), %eax	#, tmp342
 436              	# dgesv_gauss-elim_gcc_optimized.c:90:   double matrix[n][n+1];
 437              		.loc 1 90 10 view .LVU84
 438 01b8 4898     		cltq
 439              	# dgesv_gauss-elim_gcc_optimized.c:62:   double x[n], ratio;
  62:dgesv_gauss-elim_gcc_optimized.c **** 
 440              		.loc 1 62 10 view .LVU85
 441 01ba C4E1F96E 		vmovq	%rsp, %xmm7	#, tmp341
 441      FC
 442              	.LVL30:
  69:dgesv_gauss-elim_gcc_optimized.c **** 
 443              		.loc 1 69 3 is_stmt 1 view .LVU86
 444              		.loc 1 90 3 view .LVU87
 445              	# dgesv_gauss-elim_gcc_optimized.c:90:   double matrix[n][n+1];
 446              		.loc 1 90 10 is_stmt 0 view .LVU88
 447 01bf 480FAFC7 		imulq	%rdi, %rax	# _127, tmp344
 448 01c3 4883C00F 		addq	$15, %rax	#, tmp346
 449 01c7 4883E0F0 		andq	$-16, %rax	#, tmp350
 450 01cb 4829C4   		subq	%rax, %rsp	# tmp350,
 451              	.LVL31:
  91:dgesv_gauss-elim_gcc_optimized.c **** 
  92:dgesv_gauss-elim_gcc_optimized.c ****   for (u=0;u<ldb;u++)
 452              		.loc 1 92 3 is_stmt 1 view .LVU89
 453              		.loc 1 92 12 view .LVU90
 454              	# dgesv_gauss-elim_gcc_optimized.c:92:   for (u=0;u<ldb;u++)
 455              		.loc 1 92 3 is_stmt 0 view .LVU91
 456 01ce 85C9     		testl	%ecx, %ecx	# ldb
 457 01d0 0F8ED106 		jle	.L22	#,
 457      0000
 458 01d6 4489D8   		movl	%r11d, %eax	# n, bnd.65
 459 01d9 4989DF   		movq	%rbx, %r15	# _131, _40
 460              	# dgesv_gauss-elim_gcc_optimized.c:116: 	for(i=0;i<n-1;i++)
  93:dgesv_gauss-elim_gcc_optimized.c ****   {
  94:dgesv_gauss-elim_gcc_optimized.c **** 	for (i=0;i<n;i++)
  95:dgesv_gauss-elim_gcc_optimized.c **** 	{
  96:dgesv_gauss-elim_gcc_optimized.c **** 		for(j=0;j<lda+1;j++)
  97:dgesv_gauss-elim_gcc_optimized.c **** 		{
  98:dgesv_gauss-elim_gcc_optimized.c **** 		  if (j<lda)
  99:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 100:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 101:dgesv_gauss-elim_gcc_optimized.c **** 		  {
 102:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = b[i*nrhs+u];
 103:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 104:dgesv_gauss-elim_gcc_optimized.c **** 		}
 105:dgesv_gauss-elim_gcc_optimized.c **** 	}
 106:dgesv_gauss-elim_gcc_optimized.c **** 	/*printf("matrix a after adding column :\n");
 107:dgesv_gauss-elim_gcc_optimized.c **** 	for(i=0;i<n;i++)
 108:dgesv_gauss-elim_gcc_optimized.c **** 	{
 109:dgesv_gauss-elim_gcc_optimized.c **** 		for(j=0;j<lda+1;j++)
 110:dgesv_gauss-elim_gcc_optimized.c **** 		{
 111:dgesv_gauss-elim_gcc_optimized.c **** 		   printf( " %6.2f", matrix[i][j]);
 112:dgesv_gauss-elim_gcc_optimized.c **** 		}
 113:dgesv_gauss-elim_gcc_optimized.c **** 		printf("\n");
 114:dgesv_gauss-elim_gcc_optimized.c **** 	}*/
 115:dgesv_gauss-elim_gcc_optimized.c **** 
 116:dgesv_gauss-elim_gcc_optimized.c **** 	for(i=0;i<n-1;i++)
 461              		.loc 1 116 13 view .LVU92
 462 01dc 458D6BFF 		leal	-1(%r11), %r13d	#, _9
 463              	# dgesv_gauss-elim_gcc_optimized.c:160: 	  x_matrix[i][u] = x[i];
 117:dgesv_gauss-elim_gcc_optimized.c **** 	{
 118:dgesv_gauss-elim_gcc_optimized.c **** 	  if(matrix[i][i] == 0.0)
 119:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 120:dgesv_gauss-elim_gcc_optimized.c **** 	    printf("Mathematical Error!");
 121:dgesv_gauss-elim_gcc_optimized.c **** 	    exit(0);
 122:dgesv_gauss-elim_gcc_optimized.c **** 	  }
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  for(j=i+1;j<n;j++)
 124:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 125:dgesv_gauss-elim_gcc_optimized.c **** 	    ratio = matrix[j][i]/matrix[i][i];
 126:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 127:dgesv_gauss-elim_gcc_optimized.c **** 		{
 128:dgesv_gauss-elim_gcc_optimized.c **** 			if ((k+9)==lda-1)
 129:dgesv_gauss-elim_gcc_optimized.c **** 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+10];
 130:dgesv_gauss-elim_gcc_optimized.c **** 			else
 131:dgesv_gauss-elim_gcc_optimized.c **** 			{
 132:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k] = matrix[j][k] - ratio*matrix[i][k];
 133:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+1] = matrix[j][k+1] - ratio*matrix[i][k+1];
 134:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+2] = matrix[j][k+2] - ratio*matrix[i][k+2];
 135:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+3] = matrix[j][k+3] - ratio*matrix[i][k+3];
 136:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+4] = matrix[j][k+4] - ratio*matrix[i][k+4];
 137:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+5] = matrix[j][k+5] - ratio*matrix[i][k+5];
 138:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+6] = matrix[j][k+6] - ratio*matrix[i][k+6];
 139:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+7] = matrix[j][k+7] - ratio*matrix[i][k+7];
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+8] = matrix[j][k+8] - ratio*matrix[i][k+8];
 141:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 142:dgesv_gauss-elim_gcc_optimized.c **** 			}
 143:dgesv_gauss-elim_gcc_optimized.c **** 		}
 144:dgesv_gauss-elim_gcc_optimized.c **** 	  }
 145:dgesv_gauss-elim_gcc_optimized.c **** 	}
 146:dgesv_gauss-elim_gcc_optimized.c **** 	//x[n] = matrix[n-1][lda]/matrix[n-1][lda-1];
 147:dgesv_gauss-elim_gcc_optimized.c **** 	for(i=n-1;i>=0;i--)
 148:dgesv_gauss-elim_gcc_optimized.c **** 	{
 149:dgesv_gauss-elim_gcc_optimized.c **** 	  x[i] = matrix[i][lda];
 150:dgesv_gauss-elim_gcc_optimized.c **** 		for(j=i+1;j<lda;j++)
 151:dgesv_gauss-elim_gcc_optimized.c **** 		{
 152:dgesv_gauss-elim_gcc_optimized.c **** 		  x[i] = x[i] - matrix[i][j]*x[j];
 153:dgesv_gauss-elim_gcc_optimized.c **** 		}
 154:dgesv_gauss-elim_gcc_optimized.c **** 	  x[i] = x[i]/matrix[i][i];
 155:dgesv_gauss-elim_gcc_optimized.c **** 	}
 156:dgesv_gauss-elim_gcc_optimized.c **** 
 157:dgesv_gauss-elim_gcc_optimized.c **** 	for(i=0;i<n;i++)
 158:dgesv_gauss-elim_gcc_optimized.c **** 	{
 159:dgesv_gauss-elim_gcc_optimized.c **** 	  //printf("x[%d] = %6.2f\n",i, x[i]);
 160:dgesv_gauss-elim_gcc_optimized.c **** 	  x_matrix[i][u] = x[i];
 464              		.loc 1 160 15 view .LVU93
 465 01e0 48C1EA03 		shrq	$3, %rdx	#, _122
 466 01e4 C1E804   		shrl	$4, %eax	#,
 467 01e7 48F7DB   		negq	%rbx	# tmp359
 468 01ea 49C1EF03 		shrq	$3, %r15	#, _40
 469 01ee C4E1F97E 		vmovq	%xmm7, %rsi	# tmp341, tmp341
 469      FE
 470 01f3 48C1E007 		salq	$7, %rax	#, bnd.65
 471 01f7 48899578 		movq	%rdx, -136(%rbp)	# _122, %sfp
 471      FFFFFF
 472 01fe 4889E7   		movq	%rsp, %rdi	#, tmp354
 473 0201 62F17D48 		vmovdqa32	.LC3(%rip), %zmm6	#, tmp537
 473      6F350000 
 473      0000
 474 020b 48898550 		movq	%rax, -176(%rbp)	# bnd.65, %sfp
 474      FFFFFF
 475 0212 4489D8   		movl	%r11d, %eax	# n, niters_vector_mult_vf.66
 476 0215 62F17D48 		vmovdqa32	.LC4(%rip), %zmm5	#, tmp538
 476      6F2D0000 
 476      0000
 477 021f C441F96E 		vmovq	%r9, %xmm9	# tmp551, b
 477      C9
 478 0224 83E0F0   		andl	$-16, %eax	#, niters_vector_mult_vf.66
 479 0227 48899D48 		movq	%rbx, -184(%rbp)	# tmp359, %sfp
 479      FFFFFF
 480 022e 498D5F01 		leaq	1(%r15), %rbx	#, tmp516
 481              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 482              		.loc 1 96 20 view .LVU94
 483 0232 C57D6F05 		vmovdqa	.LC2(%rip), %ymm8	#, tmp540
 483      00000000 
 484 023a 89855CFF 		movl	%eax, -164(%rbp)	# niters_vector_mult_vf.66, %sfp
 484      FFFF
 485 0240 4963C5   		movslq	%r13d, %rax	# _9, _7
 486 0243 488D14C5 		leaq	0(,%rax,8), %rdx	#, _240
 486      00000000 
 487 024b 48F7D8   		negq	%rax	# tmp363
 488 024e 48895DA0 		movq	%rbx, -96(%rbp)	# tmp516, %sfp
 489 0252 4801D6   		addq	%rdx, %rsi	# _240, ivtmp.114
 490 0255 480FAFD3 		imulq	%rbx, %rdx	# tmp516, tmp361
 491              	# dgesv_gauss-elim_gcc_optimized.c:160: 	  x_matrix[i][u] = x[i];
 492              		.loc 1 160 15 view .LVU95
 493 0259 48C74590 		movq	$0, -112(%rbp)	#, %sfp
 493      00000000 
 494 0261 48897580 		movq	%rsi, -128(%rbp)	# ivtmp.114, %sfp
 495 0265 488D04C2 		leaq	(%rdx,%rax,8), %rax	#, tmp365
 496 0269 4801F8   		addq	%rdi, %rax	# tmp354, ivtmp.116
 497 026c 48898560 		movq	%rax, -160(%rbp)	# ivtmp.116, %sfp
 497      FFFFFF
 498              	.LVL32:
 499              	.L23:
 500              		.loc 1 160 15 view .LVU96
 501 0273 488B4590 		movq	-112(%rbp), %rax	# %sfp, ivtmp.172
 502              	# dgesv_gauss-elim_gcc_optimized.c:94: 	for (i=0;i<n;i++)
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 503              		.loc 1 94 2 view .LVU97
 504 0277 31C9     		xorl	%ecx, %ecx	# ivtmp.169
 505 0279 4531C9   		xorl	%r9d, %r9d	# ivtmp.168
 506              	# dgesv_gauss-elim_gcc_optimized.c:94: 	for (i=0;i<n;i++)
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 507              		.loc 1 94 8 view .LVU98
 508 027c 4531D2   		xorl	%r10d, %r10d	# i
 509 027f 8945A8   		movl	%eax, -88(%rbp)	# tmp776, %sfp
 510              	.LVL33:
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 511              		.loc 1 94 11 is_stmt 1 view .LVU99
 512 0282 4189C4   		movl	%eax, %r12d	# ivtmp.172, _522
 513              	# dgesv_gauss-elim_gcc_optimized.c:94: 	for (i=0;i<n;i++)
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 514              		.loc 1 94 2 is_stmt 0 view .LVU100
 515 0285 4585DB   		testl	%r11d, %r11d	# n
 516 0288 0F8E3F06 		jle	.L88	#,
 516      0000
 517 028e 8B9D5CFF 		movl	-164(%rbp), %ebx	# %sfp, niters_vector_mult_vf.66
 517      FFFF
 518 0294 44896DB8 		movl	%r13d, -72(%rbp)	# _9, %sfp
 519 0298 C4C1796E 		vmovd	%r12d, %xmm3	# _522, _522
 519      DC
 520 029d C4C1F97E 		vmovq	%xmm2, %r13	# a, a
 520      D5
 521 02a2 4C8B8550 		movq	-176(%rbp), %r8	# %sfp, _501
 521      FFFFFF
 522              	.LVL34:
 523 02a9 0F1F8000 		.p2align 4,,10
 523      000000
 524              		.p2align 3
 525              	.L57:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 526              		.loc 1 96 11 is_stmt 1 view .LVU101
 527              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 528              		.loc 1 102 30 is_stmt 0 view .LVU102
 529 02b0 C5F97ED8 		vmovd	%xmm3, %eax	# _522, _522
 530              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 531              		.loc 1 102 23 view .LVU103
 532 02b4 C461F97E 		vmovq	%xmm9, %rsi	# b, b
 532      CE
 533              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 534              		.loc 1 102 30 view .LVU104
 535 02b9 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp465
 536 02bb 837DB80E 		cmpl	$14, -72(%rbp)	#, %sfp
 537 02bf 4898     		cltq
 538              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 539              		.loc 1 102 23 view .LVU105
 540 02c1 4C8D24C6 		leaq	(%rsi,%rax,8), %r12	#, _39
 541 02c5 0F86A304 		jbe	.L89	#,
 541      0000
 542              	.LVL35:
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 543              		.loc 1 102 23 view .LVU106
 544 02cb 4863C1   		movslq	%ecx, %rax	# ivtmp.169, _35
 545 02ce 4A8D14CF 		leaq	(%rdi,%r9,8), %rdx	#, _512
 546 02d2 62F17D48 		vmovdqa32	.LC1(%rip), %zmm1	#, vect_vec_iv_.68
 546      6F0D0000 
 546      0000
 547 02dc 498D74C5 		leaq	0(%r13,%rax,8), %rsi	#, vectp.70
 547      00
 548              	.LVL36:
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 549              		.loc 1 102 23 view .LVU107
 550 02e1 31C0     		xorl	%eax, %eax	# ivtmp.156
 551              	.LVL37:
 552              		.p2align 4,,10
 553 02e3 0F1F4400 		.p2align 3
 553      00
 554              	.L34:
 555              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 556              		.loc 1 99 20 view .LVU108
 557 02e8 62F1FD48 		vmovupd	(%rsi,%rax), %zmm4	# MEM[base: vectp.70_301, index: ivtmp.156_498, offset: 0B], tmp739
 557      102406
 558 02ef 62F17D48 		vmovdqa32	%zmm1, %zmm0	# vect_vec_iv_.68, vect_vec_iv_.68
 558      6FC1
 559 02f5 62F17548 		vpaddd	%zmm6, %zmm1, %zmm1	# tmp537, vect_vec_iv_.68, vect_vec_iv_.68
 559      FECE
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 560              		.loc 1 98 5 is_stmt 1 view .LVU109
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 561              		.loc 1 99 7 view .LVU110
 562              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 563              		.loc 1 96 20 is_stmt 0 view .LVU111
 564 02fb 62F17D48 		vpaddd	%zmm5, %zmm0, %zmm0	# tmp538, vect_vec_iv_.68, vect_j_167.75
 564      FEC5
 565              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 566              		.loc 1 99 20 view .LVU112
 567 0301 62F1FD48 		vmovupd	%zmm4, (%rdx,%rax)	# tmp739, MEM[base: _512, index: ivtmp.156_498, offset: 0B]
 567      112402
 568 0308 62F1FD48 		vmovupd	64(%rsi,%rax), %zmm4	# MEM[base: vectp.70_301, index: ivtmp.156_498, offset: 64B], tmp740
 568      10640601 
 569 0310 62F1FD48 		vmovupd	%zmm4, 64(%rdx,%rax)	# tmp740, MEM[base: _512, index: ivtmp.156_498, offset: 64B]
 569      11640201 
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 570              		.loc 1 96 19 is_stmt 1 view .LVU113
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 571              		.loc 1 96 11 view .LVU114
 572 0318 4883E880 		subq	$-128, %rax	#, ivtmp.156
 573 031c 4C39C0   		cmpq	%r8, %rax	# _501, ivtmp.156
 574 031f 75C7     		jne	.L34	#,
 575 0321 62F37D48 		vextracti32x8	$0x1, %zmm0, %ymm0	# vect_j_167.75, tmp366
 575      3BC001
 576 0328 C4E37D39 		vextracti128	$0x1, %ymm0, %xmm0	# tmp366, tmp367
 576      C001
 577 032e C4E37916 		vpextrd	$3, %xmm0, %eax	#, tmp367, j
 577      C003
 578 0334 4139DB   		cmpl	%ebx, %r11d	# niters_vector_mult_vf.66, n
 579 0337 0F846401 		je	.L24	#,
 579      0000
 580              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 581              		.loc 1 96 20 is_stmt 0 view .LVU115
 582 033d 4189DE   		movl	%ebx, %r14d	# niters_vector_mult_vf.66,
 583              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 584              		.loc 1 96 8 view .LVU116
 585 0340 89DA     		movl	%ebx, %edx	# niters_vector_mult_vf.66, tmp.79
 586              	.LVL38:
 587              	.L38:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 588              		.loc 1 96 8 view .LVU117
 589 0342 4489DE   		movl	%r11d, %esi	# n, niters.76
 590 0345 4429F6   		subl	%r14d, %esi	# _296, niters.76
 591 0348 8D46FF   		leal	-1(%rsi), %eax	#, tmp368
 592 034b 83F806   		cmpl	$6, %eax	#, tmp368
 593 034e 766E     		jbe	.L25	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 594              		.loc 1 98 5 is_stmt 1 view .LVU118
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 595              		.loc 1 99 7 view .LVU119
 596 0350 4863C1   		movslq	%ecx, %rax	# ivtmp.169, _35
 597 0353 4C01F0   		addq	%r14, %rax	# _363, tmp370
 598 0356 4D01CE   		addq	%r9, %r14	# ivtmp.168, tmp372
 599 0359 498D44C5 		leaq	0(%r13,%rax,8), %rax	#, vectp.82
 599      00
 600              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 601              		.loc 1 99 23 is_stmt 0 view .LVU120
 602 035e C5F91060 		vmovupd	32(%rax), %xmm4	# MEM <vector(4) double> [(double *)vectp.82_361 + 32B], tmp732
 602      20
 603 0363 C4E35D18 		vinsertf128	$0x1, 48(%rax), %ymm4, %ymm0	# MEM <vector(4) double> [(double *)vectp.82_361 + 32B], 
 603      403001
 604 036a C5F91020 		vmovupd	(%rax), %xmm4	# MEM <vector(4) double> [(double *)vectp.82_361], tmp733
 605 036e C4E35D18 		vinsertf128	$0x1, 16(%rax), %ymm4, %ymm1	# MEM <vector(4) double> [(double *)vectp.82_361], tmp733
 605      481001
 606              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 607              		.loc 1 99 20 view .LVU121
 608 0375 C4A17911 		vmovupd	%xmm0, 32(%rdi,%r14,8)	# tmp374, MEM <vector(4) double> [(double *)vectp_matrix.86_371 + 3
 608      44F720
 609 037c 62B3FD28 		vextractf64x2	$0x1, %ymm0, 48(%rdi,%r14,8)	# tmp374, MEM <vector(4) double> [(double *)vectp_matri
 609      1944F703 
 609      01
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 610              		.loc 1 96 19 is_stmt 1 view .LVU122
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 611              		.loc 1 96 11 view .LVU123
 612              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 613              		.loc 1 96 20 is_stmt 0 view .LVU124
 614 0385 62F27D28 		vpbroadcastd	%edx, %ymm0	# tmp.79, tmp378
 614      7CC2
 615              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 616              		.loc 1 99 20 view .LVU125
 617 038b C4A17911 		vmovupd	%xmm1, (%rdi,%r14,8)	# vect__282.83, MEM <vector(4) double> [(double *)vectp_matrix.86_371
 617      0CF7
 618              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 619              		.loc 1 96 20 view .LVU126
 620 0391 C4C17DFE 		vpaddd	%ymm8, %ymm0, %ymm0	# tmp540, tmp378, vect_j_284.87
 620      C0
 621              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 622              		.loc 1 99 20 view .LVU127
 623 0396 62B3FD28 		vextractf64x2	$0x1, %ymm1, 16(%rdi,%r14,8)	# vect__282.83, MEM <vector(4) double> [(double *)vectp
 623      194CF701 
 623      01
 624 039f 4189F6   		movl	%esi, %r14d	# niters.76, niters_vector_mult_vf.78
 625 03a2 C4E37D39 		vextracti128	$0x1, %ymm0, %xmm0	# vect_j_284.87, tmp381
 625      C001
 626 03a8 4183E6F8 		andl	$-8, %r14d	#, niters_vector_mult_vf.78
 627 03ac C4E37916 		vpextrd	$3, %xmm0, %eax	#, tmp381, j
 627      C003
 628 03b2 4401F2   		addl	%r14d, %edx	# niters_vector_mult_vf.78, tmp.79
 629 03b5 4439F6   		cmpl	%r14d, %esi	# niters_vector_mult_vf.78, niters.76
 630 03b8 0F84E300 		je	.L24	#,
 630      0000
 631              	.L25:
 632              	.LVL39:
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 633              		.loc 1 98 5 is_stmt 1 view .LVU128
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 634              		.loc 1 99 7 view .LVU129
 635              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 636              		.loc 1 99 20 is_stmt 0 view .LVU130
 637 03be 4963F2   		movslq	%r10d, %rsi	# i, i
 638              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 639              		.loc 1 99 27 view .LVU131
 640 03c1 8D0411   		leal	(%rcx,%rdx), %eax	#, tmp386
 641              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 642              		.loc 1 99 20 view .LVU132
 643 03c4 4C63F2   		movslq	%edx, %r14	# tmp.79, tmp.79
 644 03c7 490FAFF7 		imulq	%r15, %rsi	# _40, tmp384
 645              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 646              		.loc 1 99 27 view .LVU133
 647 03cb 4898     		cltq
 648              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 649              		.loc 1 99 20 view .LVU134
 650 03cd C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_241, *_241
 650      44C500
 651              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 652              		.loc 1 96 20 view .LVU135
 653 03d4 8D4201   		leal	1(%rdx), %eax	#, j
 654              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 655              		.loc 1 99 20 view .LVU136
 656 03d7 4901F6   		addq	%rsi, %r14	# tmp384, tmp385
 657 03da C4A17B11 		vmovsd	%xmm0, (%rdi,%r14,8)	# *_241, (*matrix.6_134)
 657      04F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 658              		.loc 1 96 19 is_stmt 1 view .LVU137
 659              	.LVL40:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 660              		.loc 1 96 11 view .LVU138
 661              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 662              		.loc 1 96 3 is_stmt 0 view .LVU139
 663 03e0 4139C3   		cmpl	%eax, %r11d	# j, n
 664 03e3 0F8EB800 		jle	.L24	#,
 664      0000
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 665              		.loc 1 98 5 is_stmt 1 view .LVU140
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 666              		.loc 1 99 7 view .LVU141
 667              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 668              		.loc 1 99 20 is_stmt 0 view .LVU142
 669 03e9 4C63F0   		movslq	%eax, %r14	# j, j
 670              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 671              		.loc 1 99 27 view .LVU143
 672 03ec 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp393
 673              	.LVL41:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 674              		.loc 1 99 27 view .LVU144
 675 03ee 4898     		cltq
 676              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 677              		.loc 1 99 20 view .LVU145
 678 03f0 4901F6   		addq	%rsi, %r14	# tmp384, tmp392
 679              	.LVL42:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 680              		.loc 1 99 20 view .LVU146
 681 03f3 C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_272, *_272
 681      44C500
 682              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 683              		.loc 1 96 20 view .LVU147
 684 03fa 8D4202   		leal	2(%rdx), %eax	#, j
 685              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 686              		.loc 1 99 20 view .LVU148
 687 03fd C4A17B11 		vmovsd	%xmm0, (%rdi,%r14,8)	# *_272, (*matrix.6_134)
 687      04F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 688              		.loc 1 96 19 is_stmt 1 view .LVU149
 689              	.LVL43:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 690              		.loc 1 96 11 view .LVU150
 691              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 692              		.loc 1 96 3 is_stmt 0 view .LVU151
 693 0403 4139C3   		cmpl	%eax, %r11d	# j, n
 694 0406 0F8E9500 		jle	.L24	#,
 694      0000
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 695              		.loc 1 98 5 is_stmt 1 view .LVU152
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 696              		.loc 1 99 7 view .LVU153
 697              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 698              		.loc 1 99 20 is_stmt 0 view .LVU154
 699 040c 4C63F0   		movslq	%eax, %r14	# j, j
 700              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 701              		.loc 1 99 27 view .LVU155
 702 040f 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp400
 703              	.LVL44:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 704              		.loc 1 99 27 view .LVU156
 705 0411 4898     		cltq
 706              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 707              		.loc 1 99 20 view .LVU157
 708 0413 4901F6   		addq	%rsi, %r14	# tmp384, tmp399
 709              	.LVL45:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 710              		.loc 1 99 20 view .LVU158
 711 0416 C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_388, *_388
 711      44C500
 712              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 713              		.loc 1 96 20 view .LVU159
 714 041d 8D4203   		leal	3(%rdx), %eax	#, j
 715              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 716              		.loc 1 99 20 view .LVU160
 717 0420 C4A17B11 		vmovsd	%xmm0, (%rdi,%r14,8)	# *_388, (*matrix.6_134)
 717      04F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 718              		.loc 1 96 19 is_stmt 1 view .LVU161
 719              	.LVL46:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 720              		.loc 1 96 11 view .LVU162
 721              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 722              		.loc 1 96 3 is_stmt 0 view .LVU163
 723 0426 4139C3   		cmpl	%eax, %r11d	# j, n
 724 0429 7E76     		jle	.L24	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 725              		.loc 1 98 5 is_stmt 1 view .LVU164
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 726              		.loc 1 99 7 view .LVU165
 727              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 728              		.loc 1 99 20 is_stmt 0 view .LVU166
 729 042b 4C63F0   		movslq	%eax, %r14	# j, j
 730              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 731              		.loc 1 99 27 view .LVU167
 732 042e 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp407
 733              	.LVL47:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 734              		.loc 1 99 27 view .LVU168
 735 0430 4898     		cltq
 736              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 737              		.loc 1 99 20 view .LVU169
 738 0432 4901F6   		addq	%rsi, %r14	# tmp384, tmp406
 739              	.LVL48:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 740              		.loc 1 99 20 view .LVU170
 741 0435 C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_397, *_397
 741      44C500
 742              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 743              		.loc 1 96 20 view .LVU171
 744 043c 8D4204   		leal	4(%rdx), %eax	#, j
 745              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 746              		.loc 1 99 20 view .LVU172
 747 043f C4A17B11 		vmovsd	%xmm0, (%rdi,%r14,8)	# *_397, (*matrix.6_134)
 747      04F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 748              		.loc 1 96 19 is_stmt 1 view .LVU173
 749              	.LVL49:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 750              		.loc 1 96 11 view .LVU174
 751              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 752              		.loc 1 96 3 is_stmt 0 view .LVU175
 753 0445 4139C3   		cmpl	%eax, %r11d	# j, n
 754 0448 7E57     		jle	.L24	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 755              		.loc 1 98 5 is_stmt 1 view .LVU176
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 756              		.loc 1 99 7 view .LVU177
 757              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 758              		.loc 1 99 20 is_stmt 0 view .LVU178
 759 044a 4C63F0   		movslq	%eax, %r14	# j, j
 760              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 761              		.loc 1 99 27 view .LVU179
 762 044d 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp414
 763              	.LVL50:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 764              		.loc 1 99 27 view .LVU180
 765 044f 4898     		cltq
 766              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 767              		.loc 1 99 20 view .LVU181
 768 0451 4901F6   		addq	%rsi, %r14	# tmp384, tmp413
 769              	.LVL51:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 770              		.loc 1 99 20 view .LVU182
 771 0454 C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_406, *_406
 771      44C500
 772              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 773              		.loc 1 96 20 view .LVU183
 774 045b 8D4205   		leal	5(%rdx), %eax	#, j
 775              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 776              		.loc 1 99 20 view .LVU184
 777 045e C4A17B11 		vmovsd	%xmm0, (%rdi,%r14,8)	# *_406, (*matrix.6_134)
 777      04F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 778              		.loc 1 96 19 is_stmt 1 view .LVU185
 779              	.LVL52:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 780              		.loc 1 96 11 view .LVU186
 781              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 782              		.loc 1 96 3 is_stmt 0 view .LVU187
 783 0464 4139C3   		cmpl	%eax, %r11d	# j, n
 784 0467 7E38     		jle	.L24	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 785              		.loc 1 98 5 is_stmt 1 view .LVU188
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 786              		.loc 1 99 7 view .LVU189
 787              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 788              		.loc 1 99 20 is_stmt 0 view .LVU190
 789 0469 4C63F0   		movslq	%eax, %r14	# j, j
 790              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 791              		.loc 1 99 27 view .LVU191
 792 046c 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp421
 793              	.LVL53:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 794              		.loc 1 99 27 view .LVU192
 795 046e 4898     		cltq
 796              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 797              		.loc 1 99 20 view .LVU193
 798 0470 4901F6   		addq	%rsi, %r14	# tmp384, tmp420
 799              	.LVL54:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 800              		.loc 1 99 20 view .LVU194
 801 0473 C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_415, *_415
 801      44C500
 802              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 803              		.loc 1 96 20 view .LVU195
 804 047a 8D4206   		leal	6(%rdx), %eax	#, j
 805              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 806              		.loc 1 99 20 view .LVU196
 807 047d C4A17B11 		vmovsd	%xmm0, (%rdi,%r14,8)	# *_415, (*matrix.6_134)
 807      04F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 808              		.loc 1 96 19 is_stmt 1 view .LVU197
 809              	.LVL55:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 810              		.loc 1 96 11 view .LVU198
 811              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 812              		.loc 1 96 3 is_stmt 0 view .LVU199
 813 0483 4139C3   		cmpl	%eax, %r11d	# j, n
 814 0486 7E19     		jle	.L24	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 815              		.loc 1 98 5 is_stmt 1 view .LVU200
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 816              		.loc 1 99 7 view .LVU201
 817              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 818              		.loc 1 99 20 is_stmt 0 view .LVU202
 819 0488 4C63F0   		movslq	%eax, %r14	# j, j
 820              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 821              		.loc 1 99 27 view .LVU203
 822 048b 01C8     		addl	%ecx, %eax	# ivtmp.169, tmp428
 823              	.LVL56:
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 824              		.loc 1 99 27 view .LVU204
 825 048d 4898     		cltq
 826              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 827              		.loc 1 99 20 view .LVU205
 828 048f 4C01F6   		addq	%r14, %rsi	# j, tmp427
 829 0492 C4C17B10 		vmovsd	0(%r13,%rax,8), %xmm0	# *_333, *_333
 829      44C500
 830              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 831              		.loc 1 96 20 view .LVU206
 832 0499 8D4207   		leal	7(%rdx), %eax	#, j
 833              	# dgesv_gauss-elim_gcc_optimized.c:99: 		    matrix[i][j] = a[i*n+j];
  99:dgesv_gauss-elim_gcc_optimized.c **** 		  else
 834              		.loc 1 99 20 view .LVU207
 835 049c C5FB1104 		vmovsd	%xmm0, (%rdi,%rsi,8)	# *_333, (*matrix.6_134)
 835      F7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 836              		.loc 1 96 19 is_stmt 1 view .LVU208
 837              	.LVL57:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 838              		.loc 1 96 11 view .LVU209
 839              	.L24:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 840              		.loc 1 96 11 is_stmt 0 view .LVU210
 841 04a1 4139C3   		cmpl	%eax, %r11d	# j, n
 842 04a4 0F8CC400 		jl	.L30	#,
 842      0000
 843 04aa 4489DA   		movl	%r11d, %edx	# n, _255
 844 04ad 29C2     		subl	%eax, %edx	# j, _255
 845 04af 8D7201   		leal	1(%rdx), %esi	#, tmp431
 846 04b2 83FA06   		cmpl	$6, %edx	#, _255
 847 04b5 0F86A302 		jbe	.L61	#,
 847      0000
 848 04bb 4863D0   		movslq	%eax, %rdx	# j, j
 849 04be 4189F6   		movl	%esi, %r14d	# tmp431, bnd.53
 850 04c1 C4C17B10 		vmovsd	(%r12), %xmm1	# *_39, D__lsm0.88
 850      0C24
 851 04c7 4C01CA   		addq	%r9, %rdx	# ivtmp.168, tmp435
 852 04ca 41C1EE03 		shrl	$3, %r14d	#,
 853 04ce 488D14D7 		leaq	(%rdi,%rdx,8), %rdx	#, ivtmp.152
 854 04d2 49C1E606 		salq	$6, %r14	#, tmp439
 855 04d6 62F2FD48 		vbroadcastsd	%xmm1, %zmm0	# D__lsm0.88, vect_cst__187
 855      19C1
 856 04dc 4901D6   		addq	%rdx, %r14	# ivtmp.152, _497
 857 04df 90       		.p2align 4,,10
 858              		.p2align 3
 859              	.L28:
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 860              		.loc 1 98 5 is_stmt 1 view .LVU211
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 861              		.loc 1 102 7 view .LVU212
 862              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 863              		.loc 1 102 20 is_stmt 0 view .LVU213
 864 04e0 62F1FD48 		vmovupd	%zmm0, (%rdx)	# vect_cst__187, MEM[base: _493, offset: 0B]
 864      1102
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 865              		.loc 1 96 19 is_stmt 1 view .LVU214
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 866              		.loc 1 96 11 view .LVU215
 867 04e6 4883C240 		addq	$64, %rdx	#, ivtmp.152
 868 04ea 4C39F2   		cmpq	%r14, %rdx	# _497, ivtmp.152
 869 04ed 75F1     		jne	.L28	#,
 870 04ef 4189F6   		movl	%esi, %r14d	# tmp431, niters_vector_mult_vf.54
 871 04f2 4183E6F8 		andl	$-8, %r14d	#,
 872 04f6 418D1406 		leal	(%r14,%rax), %edx	#, tmp.55
 873 04fa 4139F6   		cmpl	%esi, %r14d	# tmp431, niters_vector_mult_vf.54
 874 04fd 746F     		je	.L30	#,
 875              	.L27:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 876              		.loc 1 96 11 is_stmt 0 view .LVU216
 877 04ff 4429F6   		subl	%r14d, %esi	# niters_vector_mult_vf.54, niters.58
 878 0502 448D66FF 		leal	-1(%rsi), %r12d	#, tmp440
 879 0506 4183FC02 		cmpl	$2, %r12d	#, tmp440
 880 050a 7627     		jbe	.L32	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 881              		.loc 1 98 5 is_stmt 1 view .LVU217
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 882              		.loc 1 102 7 view .LVU218
 883              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 884              		.loc 1 102 20 is_stmt 0 view .LVU219
 885 050c 4898     		cltq
 886 050e C4E27D19 		vbroadcastsd	%xmm1, %ymm0	# D__lsm0.88, tmp441
 886      C1
 887 0513 4C01C8   		addq	%r9, %rax	# ivtmp.168, tmp444
 888 0516 4901C6   		addq	%rax, %r14	# tmp444, tmp445
 889 0519 89F0     		movl	%esi, %eax	# niters.58, niters_vector_mult_vf.60
 890 051b 83E0FC   		andl	$-4, %eax	#, niters_vector_mult_vf.60
 891 051e C4A17911 		vmovupd	%xmm0, (%rdi,%r14,8)	# tmp441, MEM <vector(4) double> [(double *)vectp_matrix.63_25]
 891      04F7
 892 0524 62B3FD28 		vextractf64x2	$0x1, %ymm0, 16(%rdi,%r14,8)	# tmp441, MEM <vector(4) double> [(double *)vectp_matri
 892      1944F701 
 892      01
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 893              		.loc 1 96 19 is_stmt 1 view .LVU220
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 894              		.loc 1 96 11 view .LVU221
 895 052d 01C2     		addl	%eax, %edx	# niters_vector_mult_vf.60, tmp.55
 896 052f 39C6     		cmpl	%eax, %esi	# niters_vector_mult_vf.60, niters.58
 897 0531 743B     		je	.L30	#,
 898              	.L32:
 899              	.LVL58:
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 900              		.loc 1 98 5 view .LVU222
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 901              		.loc 1 102 7 view .LVU223
 902              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 903              		.loc 1 102 20 is_stmt 0 view .LVU224
 904 0533 4963F2   		movslq	%r10d, %rsi	# i, i
 905 0536 4C63F2   		movslq	%edx, %r14	# tmp.55, tmp.55
 906 0539 490FAFF7 		imulq	%r15, %rsi	# _40, tmp448
 907 053d 4C89F0   		movq	%r14, %rax	# tmp.55, tmp.55
 908 0540 4801F0   		addq	%rsi, %rax	# tmp448, tmp449
 909 0543 C5FB110C 		vmovsd	%xmm1, (%rdi,%rax,8)	# D__lsm0.88, (*matrix.6_134)
 909      C7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 910              		.loc 1 96 19 is_stmt 1 view .LVU225
 911              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 912              		.loc 1 96 20 is_stmt 0 view .LVU226
 913 0548 8D4201   		leal	1(%rdx), %eax	#, j
 914              	.LVL59:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 915              		.loc 1 96 11 is_stmt 1 view .LVU227
 916              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 917              		.loc 1 96 3 is_stmt 0 view .LVU228
 918 054b 4139C3   		cmpl	%eax, %r11d	# j, n
 919 054e 7C1E     		jl	.L30	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 920              		.loc 1 98 5 is_stmt 1 view .LVU229
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 921              		.loc 1 102 7 view .LVU230
 922              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 923              		.loc 1 102 20 is_stmt 0 view .LVU231
 924 0550 4898     		cltq
 925              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 926              		.loc 1 96 20 view .LVU232
 927 0552 83C202   		addl	$2, %edx	#, j
 928              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 929              		.loc 1 102 20 view .LVU233
 930 0555 4801F0   		addq	%rsi, %rax	# tmp448, tmp453
 931              	.LVL60:
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 932              		.loc 1 102 20 view .LVU234
 933 0558 C5FB110C 		vmovsd	%xmm1, (%rdi,%rax,8)	# D__lsm0.88, (*matrix.6_134)
 933      C7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 934              		.loc 1 96 19 is_stmt 1 view .LVU235
 935              	.LVL61:
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 936              		.loc 1 96 11 view .LVU236
 937              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 938              		.loc 1 96 3 is_stmt 0 view .LVU237
 939 055d 4139D3   		cmpl	%edx, %r11d	# j, n
 940 0560 7C0C     		jl	.L30	#,
  98:dgesv_gauss-elim_gcc_optimized.c **** 		    matrix[i][j] = a[i*n+j];
 941              		.loc 1 98 5 is_stmt 1 view .LVU238
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 942              		.loc 1 102 7 view .LVU239
 943              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 944              		.loc 1 102 20 is_stmt 0 view .LVU240
 945 0562 4863D2   		movslq	%edx, %rdx	# j, j
 946 0565 488D0432 		leaq	(%rdx,%rsi), %rax	#, tmp457
 947 0569 C5FB110C 		vmovsd	%xmm1, (%rdi,%rax,8)	# D__lsm0.88, (*matrix.6_134)
 947      C7
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 948              		.loc 1 96 19 is_stmt 1 view .LVU241
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 949              		.loc 1 96 11 view .LVU242
 950              	.L30:
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 951              		.loc 1 94 15 discriminator 2 view .LVU243
 952              	# dgesv_gauss-elim_gcc_optimized.c:94: 	for (i=0;i<n;i++)
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 953              		.loc 1 94 16 is_stmt 0 discriminator 2 view .LVU244
 954 056e 4183C201 		addl	$1, %r10d	#, i
 955              	.LVL62:
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 956              		.loc 1 94 11 is_stmt 1 discriminator 2 view .LVU245
 957              	# dgesv_gauss-elim_gcc_optimized.c:94: 	for (i=0;i<n;i++)
  94:dgesv_gauss-elim_gcc_optimized.c **** 	{
 958              		.loc 1 94 2 is_stmt 0 discriminator 2 view .LVU246
 959 0572 4D01F9   		addq	%r15, %r9	# _40, ivtmp.168
 960 0575 4401D9   		addl	%r11d, %ecx	# n, ivtmp.169
 961 0578 4539D3   		cmpl	%r10d, %r11d	# i, n
 962 057b 0F852FFD 		jne	.L57	#,
 962      FFFF
 963              	# dgesv_gauss-elim_gcc_optimized.c:116: 	for(i=0;i<n-1;i++)
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 964              		.loc 1 116 2 view .LVU247
 965 0581 C4C1F96E 		vmovq	%r13, %xmm2	# a, a
 965      D5
 966              	.LVL63:
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 967              		.loc 1 116 2 view .LVU248
 968 0586 448B6DB8 		movl	-72(%rbp), %r13d	# %sfp, _9
 969              	.LVL64:
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 970              		.loc 1 116 10 is_stmt 1 view .LVU249
 971              	# dgesv_gauss-elim_gcc_optimized.c:116: 	for(i=0;i<n-1;i++)
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 972              		.loc 1 116 2 is_stmt 0 view .LVU250
 973 058a 4585ED   		testl	%r13d, %r13d	# _9
 974 058d 0F8E0C02 		jle	.L50	#,
 974      0000
 975              	.L59:
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 976              		.loc 1 116 2 view .LVU251
 977 0593 48897DB8 		movq	%rdi, -72(%rbp)	# tmp354, %sfp
 978 0597 4C8BB568 		movq	-152(%rbp), %r14	# %sfp, _131
 978      FFFFFF
 979              	# dgesv_gauss-elim_gcc_optimized.c:116: 	for(i=0;i<n-1;i++)
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 980              		.loc 1 116 7 view .LVU252
 981 059e 31D2     		xorl	%edx, %edx	# i
 982 05a0 C4411157 		vxorpd	%xmm13, %xmm13, %xmm13	# tmp525
 982      ED
 983 05a5 4C897DB0 		movq	%r15, -80(%rbp)	# _40, %sfp
 984              	.LVL65:
 985 05a9 0F1F8000 		.p2align 4,,10
 985      000000
 986              		.p2align 3
 987              	.L48:
 118:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 988              		.loc 1 118 4 is_stmt 1 view .LVU253
 989              	# dgesv_gauss-elim_gcc_optimized.c:118: 	  if(matrix[i][i] == 0.0)
 118:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 990              		.loc 1 118 16 is_stmt 0 view .LVU254
 991 05b0 488B45A0 		movq	-96(%rbp), %rax	# %sfp, tmp470
 992 05b4 4863DA   		movslq	%edx, %rbx	# i, i
 993 05b7 480FAFC3 		imulq	%rbx, %rax	# i, tmp470
 994 05bb C5FB100C 		vmovsd	(%rdi,%rax,8), %xmm1	# (*matrix.6_134), pretmp_238
 994      C7
 995              	# dgesv_gauss-elim_gcc_optimized.c:118: 	  if(matrix[i][i] == 0.0)
 118:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 996              		.loc 1 118 6 view .LVU255
 997 05c0 C4C1792E 		vucomisd	%xmm13, %xmm1	# tmp525, pretmp_238
 997      CD
 998 05c5 0F8BAD01 		jnp	.L90	#,
 998      0000
 999              	.L41:
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1000              		.loc 1 123 4 is_stmt 1 view .LVU256
 1001              	# dgesv_gauss-elim_gcc_optimized.c:123: 	  for(j=i+1;j<n;j++)
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1002              		.loc 1 123 9 is_stmt 0 view .LVU257
 1003 05cb 8D4201   		leal	1(%rdx), %eax	#, j
 1004 05ce 8945AC   		movl	%eax, -84(%rbp)	# j, %sfp
 1005              	.LVL66:
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1006              		.loc 1 123 14 is_stmt 1 view .LVU258
 1007              	# dgesv_gauss-elim_gcc_optimized.c:123: 	  for(j=i+1;j<n;j++)
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1008              		.loc 1 123 4 is_stmt 0 view .LVU259
 1009 05d1 4139C3   		cmpl	%eax, %r11d	# j, n
 1010 05d4 0F8E5F01 		jle	.L91	#,
 1010      0000
 1011 05da 4189C1   		movl	%eax, %r9d	# j, j
 1012 05dd 488B45B8 		movq	-72(%rbp), %rax	# %sfp, ivtmp.144
 1013              	.LVL67:
 1014              	# dgesv_gauss-elim_gcc_optimized.c:140:                         matrix[j][k+8] = matrix[j][k+8] - r
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1015              		.loc 1 140 74 view .LVU260
 1016 05e1 4C8B7DB0 		movq	-80(%rbp), %r15	# %sfp, tmp528
 1017 05e5 4C01F0   		addq	%r14, %rax	# _131, ivtmp.144
 1018 05e8 4C0FAFFB 		imulq	%rbx, %r15	# i, tmp528
 1019 05ec 48894598 		movq	%rax, -104(%rbp)	# ivtmp.144, %sfp
 1020 05f0 4989C2   		movq	%rax, %r10	# ivtmp.144, ivtmp.138
 1021              	# dgesv_gauss-elim_gcc_optimized.c:125: 	    ratio = matrix[j][i]/matrix[i][i];
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1022              		.loc 1 125 36 view .LVU261
 1023 05f3 488B45A0 		movq	-96(%rbp), %rax	# %sfp, tmp531
 1024 05f7 480FAFC3 		imulq	%rbx, %rax	# i, tmp531
 1025 05fb 4D89FC   		movq	%r15, %r12	# tmp528, tmp528
 1026 05fe 4989DF   		movq	%rbx, %r15	# i, i
 1027 0601 C4E1F96E 		vmovq	%rax, %xmm3	# tmp531, tmp531
 1027      D8
 1028              	.LVL68:
 1029 0606 662E0F1F 		.p2align 4,,10
 1029      84000000 
 1029      0000
 1030              		.p2align 3
 1031              	.L47:
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1032              		.loc 1 125 6 is_stmt 1 view .LVU262
 1033              	# dgesv_gauss-elim_gcc_optimized.c:125: 	    ratio = matrix[j][i]/matrix[i][i];
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1034              		.loc 1 125 23 is_stmt 0 view .LVU263
 1035 0610 4963D9   		movslq	%r9d, %rbx	# j, j
 1036 0613 480FAF5D 		imulq	-80(%rbp), %rbx	# %sfp, tmp475
 1036      B0
 1037              	# dgesv_gauss-elim_gcc_optimized.c:125: 	    ratio = matrix[j][i]/matrix[i][i];
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1038              		.loc 1 125 12 view .LVU264
 1039 0618 488B55B8 		movq	-72(%rbp), %rdx	# %sfp, ivtmp.125
 1040              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1041              		.loc 1 126 8 view .LVU265
 1042 061c 31F6     		xorl	%esi, %esi	# k
 1043              	# dgesv_gauss-elim_gcc_optimized.c:125: 	    ratio = matrix[j][i]/matrix[i][i];
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1044              		.loc 1 125 23 view .LVU266
 1045 061e 498D041F 		leaq	(%r15,%rbx), %rax	#, tmp476
 1046              	# dgesv_gauss-elim_gcc_optimized.c:125: 	    ratio = matrix[j][i]/matrix[i][i];
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1047              		.loc 1 125 12 view .LVU267
 1048 0622 C5FB1004 		vmovsd	(%rdi,%rax,8), %xmm0	# (*matrix.6_134), tmp477
 1048      C7
 1049 0627 4C89D0   		movq	%r10, %rax	# ivtmp.138, ivtmp.124
 1050 062a C5FB5EC9 		vdivsd	%xmm1, %xmm0, %xmm1	# pretmp_238, tmp477, ratio
 1051              	.LVL69:
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1052              		.loc 1 126 3 is_stmt 1 view .LVU268
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1053              		.loc 1 126 11 view .LVU269
 1054 062e E9BE0000 		jmp	.L46	#
 1054      00
 1055              	.LVL70:
 1056              		.p2align 4,,10
 1057 0633 0F1F4400 		.p2align 3
 1057      00
 1058              	.L44:
 132:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+1] = matrix[j][k+1] - ratio*matrix[i][k+1];
 1059              		.loc 1 132 4 view .LVU270
 1060              	# dgesv_gauss-elim_gcc_optimized.c:132: 			matrix[j][k] = matrix[j][k] - ratio*matrix[i][k];
 132:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+1] = matrix[j][k+1] - ratio*matrix[i][k+1];
 1061              		.loc 1 132 32 is_stmt 0 view .LVU271
 1062 0638 C5FB1002 		vmovsd	(%rdx), %xmm0	# MEM[base: _462, offset: 0B], _55
 1063 063c C4E2F1AD 		vfnmadd213sd	(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 0B], ratio, _55
 1063      00
 1064 0641 83C108   		addl	$8, %ecx	#, _474
 1065              	.LVL71:
 1066              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1067              		.loc 1 126 3 view .LVU272
 1068 0644 4883C050 		addq	$80, %rax	#, ivtmp.124
 1069              	# dgesv_gauss-elim_gcc_optimized.c:140:                         matrix[j][k+8] = matrix[j][k+8] - r
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1070              		.loc 1 140 74 view .LVU273
 1071 0648 4863C9   		movslq	%ecx, %rcx	# _474, _474
 1072              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1073              		.loc 1 126 3 view .LVU274
 1074 064b 4883C250 		addq	$80, %rdx	#, ivtmp.125
 1075              	# dgesv_gauss-elim_gcc_optimized.c:140:                         matrix[j][k+8] = matrix[j][k+8] - r
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1076              		.loc 1 140 74 view .LVU275
 1077 064f 4E8D0421 		leaq	(%rcx,%r12), %r8	#, tmp482
 1078              	# dgesv_gauss-elim_gcc_optimized.c:140:                         matrix[j][k+8] = matrix[j][k+8] - r
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1079              		.loc 1 140 51 view .LVU276
 1080 0653 4801D9   		addq	%rbx, %rcx	# tmp475, tmp486
 1081              	.LVL72:
 1082              	# dgesv_gauss-elim_gcc_optimized.c:132: 			matrix[j][k] = matrix[j][k] - ratio*matrix[i][k];
 132:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+1] = matrix[j][k+1] - ratio*matrix[i][k+1];
 1083              		.loc 1 132 17 view .LVU277
 1084 0656 C5FB1140 		vmovsd	%xmm0, -80(%rax)	# _55, MEM[base: _443, offset: 0B]
 1084      B0
 133:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+2] = matrix[j][k+2] - ratio*matrix[i][k+2];
 1085              		.loc 1 133 4 is_stmt 1 view .LVU278
 1086              	# dgesv_gauss-elim_gcc_optimized.c:133: 			matrix[j][k+1] = matrix[j][k+1] - ratio*matrix[i][k+1];
 133:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+2] = matrix[j][k+2] - ratio*matrix[i][k+2];
 1087              		.loc 1 133 36 is_stmt 0 view .LVU279
 1088 065b C5FB1042 		vmovsd	-72(%rdx), %xmm0	# MEM[base: _462, offset: 8B], _60
 1088      B8
 1089 0660 C4E2F1AD 		vfnmadd213sd	-72(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 8B], ratio, _60
 1089      40B8
 1090              	# dgesv_gauss-elim_gcc_optimized.c:133: 			matrix[j][k+1] = matrix[j][k+1] - ratio*matrix[i][k+1];
 133:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+2] = matrix[j][k+2] - ratio*matrix[i][k+2];
 1091              		.loc 1 133 19 view .LVU280
 1092 0666 C5FB1140 		vmovsd	%xmm0, -72(%rax)	# _60, MEM[base: _443, offset: 8B]
 1092      B8
 134:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+3] = matrix[j][k+3] - ratio*matrix[i][k+3];
 1093              		.loc 1 134 4 is_stmt 1 view .LVU281
 1094              	# dgesv_gauss-elim_gcc_optimized.c:134: 			matrix[j][k+2] = matrix[j][k+2] - ratio*matrix[i][k+2];
 134:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+3] = matrix[j][k+3] - ratio*matrix[i][k+3];
 1095              		.loc 1 134 36 is_stmt 0 view .LVU282
 1096 066b C5FB1042 		vmovsd	-64(%rdx), %xmm0	# MEM[base: _462, offset: 16B], _65
 1096      C0
 1097 0670 C4E2F1AD 		vfnmadd213sd	-64(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 16B], ratio, _65
 1097      40C0
 1098              	# dgesv_gauss-elim_gcc_optimized.c:134: 			matrix[j][k+2] = matrix[j][k+2] - ratio*matrix[i][k+2];
 134:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+3] = matrix[j][k+3] - ratio*matrix[i][k+3];
 1099              		.loc 1 134 19 view .LVU283
 1100 0676 C5FB1140 		vmovsd	%xmm0, -64(%rax)	# _65, MEM[base: _443, offset: 16B]
 1100      C0
 135:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+4] = matrix[j][k+4] - ratio*matrix[i][k+4];
 1101              		.loc 1 135 4 is_stmt 1 view .LVU284
 1102              	# dgesv_gauss-elim_gcc_optimized.c:135: 			matrix[j][k+3] = matrix[j][k+3] - ratio*matrix[i][k+3];
 135:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+4] = matrix[j][k+4] - ratio*matrix[i][k+4];
 1103              		.loc 1 135 36 is_stmt 0 view .LVU285
 1104 067b C5FB1042 		vmovsd	-56(%rdx), %xmm0	# MEM[base: _462, offset: 24B], _70
 1104      C8
 1105 0680 C4E2F1AD 		vfnmadd213sd	-56(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 24B], ratio, _70
 1105      40C8
 1106              	# dgesv_gauss-elim_gcc_optimized.c:135: 			matrix[j][k+3] = matrix[j][k+3] - ratio*matrix[i][k+3];
 135:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+4] = matrix[j][k+4] - ratio*matrix[i][k+4];
 1107              		.loc 1 135 19 view .LVU286
 1108 0686 C5FB1140 		vmovsd	%xmm0, -56(%rax)	# _70, MEM[base: _443, offset: 24B]
 1108      C8
 136:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+5] = matrix[j][k+5] - ratio*matrix[i][k+5];
 1109              		.loc 1 136 4 is_stmt 1 view .LVU287
 1110              	# dgesv_gauss-elim_gcc_optimized.c:136: 			matrix[j][k+4] = matrix[j][k+4] - ratio*matrix[i][k+4];
 136:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+5] = matrix[j][k+5] - ratio*matrix[i][k+5];
 1111              		.loc 1 136 36 is_stmt 0 view .LVU288
 1112 068b C5FB1042 		vmovsd	-48(%rdx), %xmm0	# MEM[base: _462, offset: 32B], _75
 1112      D0
 1113 0690 C4E2F1AD 		vfnmadd213sd	-48(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 32B], ratio, _75
 1113      40D0
 1114              	# dgesv_gauss-elim_gcc_optimized.c:136: 			matrix[j][k+4] = matrix[j][k+4] - ratio*matrix[i][k+4];
 136:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+5] = matrix[j][k+5] - ratio*matrix[i][k+5];
 1115              		.loc 1 136 19 view .LVU289
 1116 0696 C5FB1140 		vmovsd	%xmm0, -48(%rax)	# _75, MEM[base: _443, offset: 32B]
 1116      D0
 137:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+6] = matrix[j][k+6] - ratio*matrix[i][k+6];
 1117              		.loc 1 137 25 is_stmt 1 view .LVU290
 1118              	# dgesv_gauss-elim_gcc_optimized.c:137:                         matrix[j][k+5] = matrix[j][k+5] - r
 137:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+6] = matrix[j][k+6] - ratio*matrix[i][k+6];
 1119              		.loc 1 137 57 is_stmt 0 view .LVU291
 1120 069b C5FB1042 		vmovsd	-40(%rdx), %xmm0	# MEM[base: _462, offset: 40B], _80
 1120      D8
 1121 06a0 C4E2F1AD 		vfnmadd213sd	-40(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 40B], ratio, _80
 1121      40D8
 1122              	# dgesv_gauss-elim_gcc_optimized.c:137:                         matrix[j][k+5] = matrix[j][k+5] - r
 137:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+6] = matrix[j][k+6] - ratio*matrix[i][k+6];
 1123              		.loc 1 137 40 view .LVU292
 1124 06a6 C5FB1140 		vmovsd	%xmm0, -40(%rax)	# _80, MEM[base: _443, offset: 40B]
 1124      D8
 138:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+7] = matrix[j][k+7] - ratio*matrix[i][k+7];
 1125              		.loc 1 138 25 is_stmt 1 view .LVU293
 1126              	# dgesv_gauss-elim_gcc_optimized.c:138:                         matrix[j][k+6] = matrix[j][k+6] - r
 138:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+7] = matrix[j][k+7] - ratio*matrix[i][k+7];
 1127              		.loc 1 138 57 is_stmt 0 view .LVU294
 1128 06ab C5FB1042 		vmovsd	-32(%rdx), %xmm0	# MEM[base: _462, offset: 48B], _85
 1128      E0
 1129 06b0 C4E2F1AD 		vfnmadd213sd	-32(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 48B], ratio, _85
 1129      40E0
 1130              	# dgesv_gauss-elim_gcc_optimized.c:138:                         matrix[j][k+6] = matrix[j][k+6] - r
 138:dgesv_gauss-elim_gcc_optimized.c **** 			matrix[j][k+7] = matrix[j][k+7] - ratio*matrix[i][k+7];
 1131              		.loc 1 138 40 view .LVU295
 1132 06b6 C5FB1140 		vmovsd	%xmm0, -32(%rax)	# _85, MEM[base: _443, offset: 48B]
 1132      E0
 139:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+8] = matrix[j][k+8] - ratio*matrix[i][k+8];
 1133              		.loc 1 139 4 is_stmt 1 view .LVU296
 1134              	# dgesv_gauss-elim_gcc_optimized.c:139: 			matrix[j][k+7] = matrix[j][k+7] - ratio*matrix[i][k+7];
 139:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+8] = matrix[j][k+8] - ratio*matrix[i][k+8];
 1135              		.loc 1 139 36 is_stmt 0 view .LVU297
 1136 06bb C5FB1042 		vmovsd	-24(%rdx), %xmm0	# MEM[base: _462, offset: 56B], _90
 1136      E8
 1137 06c0 C4E2F1AD 		vfnmadd213sd	-24(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 56B], ratio, _90
 1137      40E8
 1138              	# dgesv_gauss-elim_gcc_optimized.c:139: 			matrix[j][k+7] = matrix[j][k+7] - ratio*matrix[i][k+7];
 139:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+8] = matrix[j][k+8] - ratio*matrix[i][k+8];
 1139              		.loc 1 139 19 view .LVU298
 1140 06c6 C5FB1140 		vmovsd	%xmm0, -24(%rax)	# _90, MEM[base: _443, offset: 56B]
 1140      E8
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1141              		.loc 1 140 25 is_stmt 1 view .LVU299
 1142              	# dgesv_gauss-elim_gcc_optimized.c:140:                         matrix[j][k+8] = matrix[j][k+8] - r
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1143              		.loc 1 140 57 is_stmt 0 view .LVU300
 1144 06cb C4A17B10 		vmovsd	(%rdi,%r8,8), %xmm0	# (*matrix.6_134), _95
 1144      04C7
 1145 06d1 C4E2F1AD 		vfnmadd213sd	(%rdi,%rcx,8), %xmm1, %xmm0	# (*matrix.6_134), ratio, _95
 1145      04CF
 1146              	# dgesv_gauss-elim_gcc_optimized.c:140:                         matrix[j][k+8] = matrix[j][k+8] - r
 140:dgesv_gauss-elim_gcc_optimized.c ****                         matrix[j][k+9] = matrix[j][k+9] - ratio*matrix[i][k+9];
 1147              		.loc 1 140 40 view .LVU301
 1148 06d7 C5FB1104 		vmovsd	%xmm0, (%rdi,%rcx,8)	# _95, (*matrix.6_134)
 1148      CF
 141:dgesv_gauss-elim_gcc_optimized.c **** 			}
 1149              		.loc 1 141 25 is_stmt 1 view .LVU302
 1150              	# dgesv_gauss-elim_gcc_optimized.c:141:                         matrix[j][k+9] = matrix[j][k+9] - r
 141:dgesv_gauss-elim_gcc_optimized.c **** 			}
 1151              		.loc 1 141 57 is_stmt 0 view .LVU303
 1152 06dc C5FB1042 		vmovsd	-8(%rdx), %xmm0	# MEM[base: _462, offset: 72B], _99
 1152      F8
 1153 06e1 C4E2F1AD 		vfnmadd213sd	-8(%rax), %xmm1, %xmm0	# MEM[base: _443, offset: 72B], ratio, _99
 1153      40F8
 1154              	# dgesv_gauss-elim_gcc_optimized.c:141:                         matrix[j][k+9] = matrix[j][k+9] - r
 141:dgesv_gauss-elim_gcc_optimized.c **** 			}
 1155              		.loc 1 141 40 view .LVU304
 1156 06e7 C5FB1140 		vmovsd	%xmm0, -8(%rax)	# _99, MEM[base: _443, offset: 72B]
 1156      F8
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1157              		.loc 1 126 19 is_stmt 1 view .LVU305
 1158              	.LVL73:
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1159              		.loc 1 126 11 view .LVU306
 1160              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1161              		.loc 1 126 3 is_stmt 0 view .LVU307
 1162 06ec 4139F3   		cmpl	%esi, %r11d	# k, n
 1163 06ef 7C2D     		jl	.L92	#,
 1164              	.LVL74:
 1165              	.L46:
 128:dgesv_gauss-elim_gcc_optimized.c **** 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+10];
 1166              		.loc 1 128 4 is_stmt 1 view .LVU308
 1167 06f1 89F1     		movl	%esi, %ecx	# k, k
 1168              	# dgesv_gauss-elim_gcc_optimized.c:129: 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+
 129:dgesv_gauss-elim_gcc_optimized.c **** 			else
 1169              		.loc 1 129 35 is_stmt 0 view .LVU309
 1170 06f3 83C60A   		addl	$10, %esi	#, k
 1171              	.LVL75:
 1172              	# dgesv_gauss-elim_gcc_optimized.c:128: 			if ((k+9)==lda-1)
 128:dgesv_gauss-elim_gcc_optimized.c **** 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+10];
 1173              		.loc 1 128 7 view .LVU310
 1174 06f6 448D4109 		leal	9(%rcx), %r8d	#, tmp478
 1175 06fa 4539C5   		cmpl	%r8d, %r13d	# tmp478, _9
 1176 06fd 0F8535FF 		jne	.L44	#,
 1176      FFFF
 129:dgesv_gauss-elim_gcc_optimized.c **** 			else
 1177              		.loc 1 129 6 is_stmt 1 view .LVU311
 1178              	# dgesv_gauss-elim_gcc_optimized.c:129: 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+
 129:dgesv_gauss-elim_gcc_optimized.c **** 			else
 1179              		.loc 1 129 40 is_stmt 0 view .LVU312
 1180 0703 C5FB1042 		vmovsd	80(%rdx), %xmm0	# MEM[base: _471, offset: 80B], _51
 1180      50
 1181              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1182              		.loc 1 126 3 view .LVU313
 1183 0708 4883C050 		addq	$80, %rax	#, ivtmp.124
 1184              	# dgesv_gauss-elim_gcc_optimized.c:129: 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+
 129:dgesv_gauss-elim_gcc_optimized.c **** 			else
 1185              		.loc 1 129 40 view .LVU314
 1186 070c C4E2F1AD 		vfnmadd213sd	(%rax), %xmm1, %xmm0	# MEM[base: _460, offset: 80B], ratio, _51
 1186      00
 1187              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1188              		.loc 1 126 3 view .LVU315
 1189 0711 4883C250 		addq	$80, %rdx	#, ivtmp.125
 1190              	# dgesv_gauss-elim_gcc_optimized.c:129: 			  matrix[j][k+10] = matrix[j][k+10] - ratio*matrix[i][k+
 129:dgesv_gauss-elim_gcc_optimized.c **** 			else
 1191              		.loc 1 129 22 view .LVU316
 1192 0715 C5FB1100 		vmovsd	%xmm0, (%rax)	# _51, MEM[base: _460, offset: 80B]
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1193              		.loc 1 126 19 is_stmt 1 view .LVU317
 1194              	.LVL76:
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1195              		.loc 1 126 11 view .LVU318
 1196              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1197              		.loc 1 126 3 is_stmt 0 view .LVU319
 1198 0719 4139F3   		cmpl	%esi, %r11d	# k, n
 1199 071c 7DD3     		jge	.L46	#,
 1200              	.LVL77:
 1201              	.L92:
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1202              		.loc 1 123 18 is_stmt 1 discriminator 2 view .LVU320
 1203              	# dgesv_gauss-elim_gcc_optimized.c:123: 	  for(j=i+1;j<n;j++)
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1204              		.loc 1 123 19 is_stmt 0 discriminator 2 view .LVU321
 1205 071e 4183C101 		addl	$1, %r9d	#, j
 1206              	.LVL78:
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1207              		.loc 1 123 14 is_stmt 1 discriminator 2 view .LVU322
 1208              	# dgesv_gauss-elim_gcc_optimized.c:123: 	  for(j=i+1;j<n;j++)
 123:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1209              		.loc 1 123 4 is_stmt 0 discriminator 2 view .LVU323
 1210 0722 4D01F2   		addq	%r14, %r10	# _131, ivtmp.138
 1211 0725 4539CB   		cmpl	%r9d, %r11d	# j, n
 1212 0728 741E     		je	.L43	#,
 1213              	# dgesv_gauss-elim_gcc_optimized.c:125: 	    ratio = matrix[j][i]/matrix[i][i];
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1214              		.loc 1 125 36 view .LVU324
 1215 072a C4E1F97E 		vmovq	%xmm3, %rax	# tmp531, tmp531
 1215      D8
 1216 072f C5FB100C 		vmovsd	(%rdi,%rax,8), %xmm1	# (*matrix.6_134), pretmp_238
 1216      C7
 1217              	.LVL79:
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1218              		.loc 1 125 36 view .LVU325
 1219 0734 E9D7FEFF 		jmp	.L47	#
 1219      FF
 1220              	.LVL80:
 1221              	.L91:
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1222              		.loc 1 125 36 view .LVU326
 1223 0739 488B45B8 		movq	-72(%rbp), %rax	# %sfp, ivtmp.144
 1224              	.LVL81:
 125:dgesv_gauss-elim_gcc_optimized.c **** 		for(k=0;k<lda+1;k+=10)
 1225              		.loc 1 125 36 view .LVU327
 1226 073d 4C01F0   		addq	%r14, %rax	# _131, ivtmp.144
 1227 0740 48894598 		movq	%rax, -104(%rbp)	# ivtmp.144, %sfp
 1228              	.LVL82:
 1229              		.p2align 4,,10
 1230 0744 0F1F4000 		.p2align 3
 1231              	.L43:
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1232              		.loc 1 116 10 is_stmt 1 view .LVU328
 1233              	# dgesv_gauss-elim_gcc_optimized.c:116: 	for(i=0;i<n-1;i++)
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1234              		.loc 1 116 2 is_stmt 0 view .LVU329
 1235 0748 488B4598 		movq	-104(%rbp), %rax	# %sfp, ivtmp.144
 1236 074c 488945B8 		movq	%rax, -72(%rbp)	# ivtmp.144, %sfp
 1237 0750 44396DAC 		cmpl	%r13d, -84(%rbp)	# _9, %sfp
 1238 0754 7D45     		jge	.L93	#,
 1239 0756 8B55AC   		movl	-84(%rbp), %edx	# %sfp, i
 1240 0759 E952FEFF 		jmp	.L48	#
 1240      FF
 1241              	.LVL83:
 1242              	.L61:
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1243              		.loc 1 116 2 view .LVU330
 1244 075e C4C17B10 		vmovsd	(%r12), %xmm1	# *_39, D__lsm0.88
 1244      0C24
 1245              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1246              		.loc 1 96 8 view .LVU331
 1247 0764 89C2     		movl	%eax, %edx	# j, tmp.55
 1248 0766 4531F6   		xorl	%r14d, %r14d	#
 1249 0769 E991FDFF 		jmp	.L27	#
 1249      FF
 1250              	.LVL84:
 1251              	.L89:
 1252              	# dgesv_gauss-elim_gcc_optimized.c:102: 		    matrix[i][j] = b[i*nrhs+u];
 102:dgesv_gauss-elim_gcc_optimized.c **** 		  }
 1253              		.loc 1 102 23 view .LVU332
 1254 076e 4531F6   		xorl	%r14d, %r14d	#
 1255              	# dgesv_gauss-elim_gcc_optimized.c:96: 		for(j=0;j<lda+1;j++)
  96:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1256              		.loc 1 96 8 view .LVU333
 1257 0771 31D2     		xorl	%edx, %edx	# tmp.79
 1258 0773 E9CAFBFF 		jmp	.L38	#
 1258      FF
 1259              	.LVL85:
 1260              	.L90:
 1261              	# dgesv_gauss-elim_gcc_optimized.c:118: 	  if(matrix[i][i] == 0.0)
 118:dgesv_gauss-elim_gcc_optimized.c **** 	  {
 1262              		.loc 1 118 6 view .LVU334
 1263 0778 0F854DFE 		jne	.L41	#,
 1263      FFFF
 120:dgesv_gauss-elim_gcc_optimized.c **** 	    exit(0);
 1264              		.loc 1 120 6 is_stmt 1 view .LVU335
 1265              	.LVL86:
 1266              	.LBB46:
 1267              	.LBI46:
 1268              		.file 2 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h"
   1:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
   5:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  10:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  15:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  19:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  22:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #ifndef _STDIO_H
  23:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #endif
  25:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  26:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  32:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __fortify_function int
  34:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
  36:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** }
  39:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #elif !defined __cplusplus
  40:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #endif
  44:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  45:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __fortify_function int
  46:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
  49:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** }
  52:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  53:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  55:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			   ...) __THROW;
  58:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  62:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __fortify_function int
  64:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
  67:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** }
  70:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** # elif !defined __cplusplus
  71:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** # endif
  75:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  76:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __fortify_function int
  77:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
  80:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** }
  83:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  84:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #endif
  85:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  86:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  88:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
  96:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __fortify_function int
  98:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 100:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 			__va_arg_pack ());
 102:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** }
 103:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** 
 104:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** __fortify_function int
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 1269              		.loc 2 105 1 view .LVU336
 1270              	.LBB47:
 106:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 107:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 1271              		.loc 2 107 3 view .LVU337
 1272              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1273              		.loc 2 107 10 is_stmt 0 view .LVU338
 1274 077e 488D3500 		leaq	.LC6(%rip), %rsi	#,
 1274      000000
 1275 0785 BF010000 		movl	$1, %edi	#,
 1275      00
 1276              	.LVL87:
 1277              		.loc 2 107 10 view .LVU339
 1278 078a 31C0     		xorl	%eax, %eax	#
 1279 078c C5F877   		vzeroupper
 1280              	.LVL88:
 1281              		.loc 2 107 10 view .LVU340
 1282 078f E8000000 		call	__printf_chk@PLT	#
 1282      00
 1283              	.LVL89:
 1284              		.loc 2 107 10 view .LVU341
 1285              	.LBE47:
 1286              	.LBE46:
 121:dgesv_gauss-elim_gcc_optimized.c **** 	  }
 1287              		.loc 1 121 6 is_stmt 1 view .LVU342
 1288 0794 31FF     		xorl	%edi, %edi	#
 1289 0796 E8000000 		call	exit@PLT	#
 1289      00
 1290              	.LVL90:
 1291              	.L93:
 121:dgesv_gauss-elim_gcc_optimized.c **** 	  }
 1292              		.loc 1 121 6 is_stmt 0 view .LVU343
 1293 079b 4C8B7DB0 		movq	-80(%rbp), %r15	# %sfp, _40
 1294              	.LVL91:
 1295              	.L50:
 1296              	# dgesv_gauss-elim_gcc_optimized.c:126: 		for(k=0;k<lda+1;k+=10)
 126:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1297              		.loc 1 126 8 view .LVU344
 1298 079f 488B5580 		movq	-128(%rbp), %rdx	# %sfp, ivtmp.114
 1299 07a3 488B5DA0 		movq	-96(%rbp), %rbx	# %sfp, tmp516
 1300 07a7 4589D9   		movl	%r11d, %r9d	# n, ivtmp.113
 1301 07aa 4589E8   		movl	%r13d, %r8d	# _9, i
 1302 07ad 488B8D60 		movq	-160(%rbp), %rcx	# %sfp, ivtmp.116
 1302      FFFFFF
 1303 07b4 4C8B9548 		movq	-184(%rbp), %r10	# %sfp, tmp359
 1303      FFFFFF
 1304 07bb C4E1F97E 		vmovq	%xmm7, %rsi	# tmp341, tmp341
 1304      FE
 1305 07c0 C441F97E 		vmovq	%xmm10, %r14	# n, n
 1305      D6
 1306              	.LVL92:
 1307              	.L49:
 149:dgesv_gauss-elim_gcc_optimized.c **** 		for(j=i+1;j<lda;j++)
 1308              		.loc 1 149 4 is_stmt 1 view .LVU345
 1309              	# dgesv_gauss-elim_gcc_optimized.c:149: 	  x[i] = matrix[i][lda];
 149:dgesv_gauss-elim_gcc_optimized.c **** 		for(j=i+1;j<lda;j++)
 1310              		.loc 1 149 20 is_stmt 0 view .LVU346
 1311 07c5 4D63E0   		movslq	%r8d, %r12	# i, i
 1312 07c8 4C89E0   		movq	%r12, %rax	# i, tmp496
 1313 07cb 490FAFC7 		imulq	%r15, %rax	# _40, tmp496
 1314 07cf 4C01F0   		addq	%r14, %rax	# n, tmp497
 1315 07d2 C5FB1004 		vmovsd	(%rdi,%rax,8), %xmm0	# (*matrix.6_134), _107
 1315      C7
 1316              	# dgesv_gauss-elim_gcc_optimized.c:149: 	  x[i] = matrix[i][lda];
 149:dgesv_gauss-elim_gcc_optimized.c **** 		for(j=i+1;j<lda;j++)
 1317              		.loc 1 149 9 view .LVU347
 1318 07d7 C5FB1102 		vmovsd	%xmm0, (%rdx)	# _107, MEM[base: _421, offset: 0B]
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1319              		.loc 1 150 3 is_stmt 1 view .LVU348
 1320              	.LVL93:
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1321              		.loc 1 150 13 view .LVU349
 1322              	# dgesv_gauss-elim_gcc_optimized.c:150: 		for(j=i+1;j<lda;j++)
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1323              		.loc 1 150 3 is_stmt 0 view .LVU350
 1324 07db 4539CB   		cmpl	%r9d, %r11d	# ivtmp.113, n
 1325 07de 7E20     		jle	.L53	#,
 1326 07e0 4963C1   		movslq	%r9d, %rax	# ivtmp.113, ivtmp.99
 1327              	.LVL94:
 1328              		.p2align 4,,10
 1329 07e3 0F1F4400 		.p2align 3
 1329      00
 1330              	.L54:
 152:dgesv_gauss-elim_gcc_optimized.c **** 		}
 1331              		.loc 1 152 5 is_stmt 1 discriminator 3 view .LVU351
 1332              	# dgesv_gauss-elim_gcc_optimized.c:152: 		  x[i] = x[i] - matrix[i][j]*x[j];
 152:dgesv_gauss-elim_gcc_optimized.c **** 		}
 1333              		.loc 1 152 17 is_stmt 0 discriminator 3 view .LVU352
 1334 07e8 C5FB1024 		vmovsd	(%rcx,%rax,8), %xmm4	# MEM[base: _411, index: ivtmp.99_366, step: 8, offset: 0B], tmp769
 1334      C1
 1335 07ed C4E2D9BD 		vfnmadd231sd	(%rsi,%rax,8), %xmm4, %xmm0	# MEM[base: x.4_129, index: ivtmp.99_366, step: 8, offset
 1335      04C6
 1336              	# dgesv_gauss-elim_gcc_optimized.c:150: 		for(j=i+1;j<lda;j++)
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1337              		.loc 1 150 3 discriminator 3 view .LVU353
 1338 07f3 4883C001 		addq	$1, %rax	#, ivtmp.99
 1339              	.LVL95:
 1340              	# dgesv_gauss-elim_gcc_optimized.c:152: 		  x[i] = x[i] - matrix[i][j]*x[j];
 152:dgesv_gauss-elim_gcc_optimized.c **** 		}
 1341              		.loc 1 152 10 discriminator 3 view .LVU354
 1342 07f7 C5FB1102 		vmovsd	%xmm0, (%rdx)	# _107, MEM[base: _421, offset: 0B]
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1343              		.loc 1 150 19 is_stmt 1 discriminator 3 view .LVU355
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1344              		.loc 1 150 13 discriminator 3 view .LVU356
 1345              	# dgesv_gauss-elim_gcc_optimized.c:150: 		for(j=i+1;j<lda;j++)
 150:dgesv_gauss-elim_gcc_optimized.c **** 		{
 1346              		.loc 1 150 3 is_stmt 0 discriminator 3 view .LVU357
 1347 07fb 4139C3   		cmpl	%eax, %r11d	# ivtmp.99, n
 1348 07fe 7FE8     		jg	.L54	#,
 1349              	.L53:
 154:dgesv_gauss-elim_gcc_optimized.c **** 	}
 1350              		.loc 1 154 4 is_stmt 1 discriminator 2 view .LVU358
 1351              	# dgesv_gauss-elim_gcc_optimized.c:154: 	  x[i] = x[i]/matrix[i][i];
 154:dgesv_gauss-elim_gcc_optimized.c **** 	}
 1352              		.loc 1 154 25 is_stmt 0 discriminator 2 view .LVU359
 1353 0800 4C0FAFE3 		imulq	%rbx, %r12	# tmp516, tmp500
 1354              	# dgesv_gauss-elim_gcc_optimized.c:147: 	for(i=n-1;i>=0;i--)
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1355              		.loc 1 147 18 discriminator 2 view .LVU360
 1356 0804 4183E801 		subl	$1, %r8d	#, i
 1357              	.LVL96:
 1358              	# dgesv_gauss-elim_gcc_optimized.c:147: 	for(i=n-1;i>=0;i--)
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1359              		.loc 1 147 2 discriminator 2 view .LVU361
 1360 0808 4183E901 		subl	$1, %r9d	#, ivtmp.113
 1361 080c 4883EA08 		subq	$8, %rdx	#, ivtmp.114
 1362 0810 4C01D1   		addq	%r10, %rcx	# tmp359, ivtmp.116
 1363              	# dgesv_gauss-elim_gcc_optimized.c:154: 	  x[i] = x[i]/matrix[i][i];
 154:dgesv_gauss-elim_gcc_optimized.c **** 	}
 1364              		.loc 1 154 15 discriminator 2 view .LVU362
 1365 0813 C4A17B5E 		vdivsd	(%rdi,%r12,8), %xmm0, %xmm0	# (*matrix.6_134), _107, tmp501
 1365      04E7
 1366              	# dgesv_gauss-elim_gcc_optimized.c:154: 	  x[i] = x[i]/matrix[i][i];
 154:dgesv_gauss-elim_gcc_optimized.c **** 	}
 1367              		.loc 1 154 9 discriminator 2 view .LVU363
 1368 0819 C5FB1142 		vmovsd	%xmm0, 8(%rdx)	# tmp501, MEM[base: _421, offset: 0B]
 1368      08
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1369              		.loc 1 147 17 is_stmt 1 discriminator 2 view .LVU364
 1370              	.LVL97:
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1371              		.loc 1 147 12 discriminator 2 view .LVU365
 1372              	# dgesv_gauss-elim_gcc_optimized.c:147: 	for(i=n-1;i>=0;i--)
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1373              		.loc 1 147 2 is_stmt 0 discriminator 2 view .LVU366
 1374 081e 4183F8FF 		cmpl	$-1, %r8d	#, i
 1375 0822 75A1     		jne	.L49	#,
 1376 0824 C4E1F96E 		vmovq	%rsi, %xmm7	# tmp341, tmp341
 1376      FE
 1377 0829 C441F96E 		vmovq	%r14, %xmm10	# n, n
 1377      D6
 1378              	.LVL98:
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1379              		.loc 1 157 10 is_stmt 1 view .LVU367
 1380              	# dgesv_gauss-elim_gcc_optimized.c:157: 	for(i=0;i<n;i++)
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1381              		.loc 1 157 2 is_stmt 0 view .LVU368
 1382 082e 4585DB   		testl	%r11d, %r11d	# n
 1383 0831 7E5E     		jle	.L51	#,
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1384              		.loc 1 157 2 view .LVU369
 1385 0833 488B5D90 		movq	-112(%rbp), %rbx	# %sfp, ivtmp.172
 1386 0837 C461F97E 		vmovq	%xmm9, %rax	# b, b
 1386      C8
 1387 083c 4489E9   		movl	%r13d, %ecx	# _9, _382
 1388 083f 4989F4   		movq	%rsi, %r12	# tmp341, tmp341
 1389 0842 4C6345A8 		movslq	-88(%rbp), %r8	# %sfp, u
 1390 0846 4C8B8D78 		movq	-136(%rbp), %r9	# %sfp, _111
 1390      FFFFFF
 1391 084d 4C8B9570 		movq	-144(%rbp), %r10	# %sfp, _127
 1391      FFFFFF
 1392 0854 488D14D8 		leaq	(%rax,%rbx,8), %rdx	#, ivtmp.94
 1393 0858 31C0     		xorl	%eax, %eax	# ivtmp.91
 1394 085a C461F97E 		vmovq	%xmm11, %rbx	# tmp330, tmp330
 1394      DB
 1395              	.LVL99:
 1396              	.L56:
 1397              		.loc 1 160 4 is_stmt 1 discriminator 3 view .LVU370
 1398              	# dgesv_gauss-elim_gcc_optimized.c:160: 	  x_matrix[i][u] = x[i];
 1399              		.loc 1 160 19 is_stmt 0 discriminator 3 view .LVU371
 1400 085f 4863F0   		movslq	%eax, %rsi	# ivtmp.91, ivtmp.91
 1401              	# dgesv_gauss-elim_gcc_optimized.c:160: 	  x_matrix[i][u] = x[i];
 1402              		.loc 1 160 22 discriminator 3 view .LVU372
 1403 0862 C4C17B10 		vmovsd	(%r12,%rax,8), %xmm0	# MEM[base: x.4_129, index: ivtmp.91_276, step: 8, offset: 0B], _112
 1403      04C4
 1404              	# dgesv_gauss-elim_gcc_optimized.c:160: 	  x_matrix[i][u] = x[i];
 1405              		.loc 1 160 19 discriminator 3 view .LVU373
 1406 0868 490FAFF1 		imulq	%r9, %rsi	# _111, tmp505
 1407              	# dgesv_gauss-elim_gcc_optimized.c:161: 	  b[i*n+u] = x[i];
 161:dgesv_gauss-elim_gcc_optimized.c **** 	  b[i*n+u] = x[i];
 1408              		.loc 1 161 13 discriminator 3 view .LVU374
 1409 086c C5FB1102 		vmovsd	%xmm0, (%rdx)	# _112, MEM[base: _340, offset: 0B]
 1410              	# dgesv_gauss-elim_gcc_optimized.c:157: 	for(i=0;i<n;i++)
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1411              		.loc 1 157 2 discriminator 3 view .LVU375
 1412 0870 4C01D2   		addq	%r10, %rdx	# _127, ivtmp.94
 1413              	# dgesv_gauss-elim_gcc_optimized.c:160: 	  x_matrix[i][u] = x[i];
 160:dgesv_gauss-elim_gcc_optimized.c **** 	  b[i*n+u] = x[i];
 1414              		.loc 1 160 19 discriminator 3 view .LVU376
 1415 0873 4C01C6   		addq	%r8, %rsi	# u, tmp506
 1416 0876 C5FB1104 		vmovsd	%xmm0, (%rbx,%rsi,8)	# _112, (*x_matrix.2_125)
 1416      F3
 1417              		.loc 1 161 4 is_stmt 1 discriminator 3 view .LVU377
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1418              		.loc 1 157 14 discriminator 3 view .LVU378
 1419              	.LVL100:
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1420              		.loc 1 157 10 discriminator 3 view .LVU379
 1421 087b 4889C6   		movq	%rax, %rsi	# ivtmp.91, ivtmp.91
 1422              	# dgesv_gauss-elim_gcc_optimized.c:157: 	for(i=0;i<n;i++)
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1423              		.loc 1 157 2 is_stmt 0 discriminator 3 view .LVU380
 1424 087e 4883C001 		addq	$1, %rax	#, ivtmp.91
 1425              	.LVL101:
 157:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1426              		.loc 1 157 2 discriminator 3 view .LVU381
 1427 0882 4839CE   		cmpq	%rcx, %rsi	# _382, ivtmp.91
 1428 0885 75D8     		jne	.L56	#,
 1429 0887 C461F96E 		vmovq	%rbx, %xmm11	# tmp330, tmp330
 1429      DB
 1430 088c C4C1F96E 		vmovq	%r12, %xmm7	# tmp341, tmp341
 1430      FC
 1431              	.LVL102:
 1432              	.L51:
  92:dgesv_gauss-elim_gcc_optimized.c ****   {
 1433              		.loc 1 92 18 is_stmt 1 view .LVU382
  92:dgesv_gauss-elim_gcc_optimized.c ****   {
 1434              		.loc 1 92 12 view .LVU383
 1435              	# dgesv_gauss-elim_gcc_optimized.c:92:   for (u=0;u<ldb;u++)
  92:dgesv_gauss-elim_gcc_optimized.c ****   {
 1436              		.loc 1 92 3 is_stmt 0 view .LVU384
 1437 0891 48834590 		addq	$1, -112(%rbp)	#, %sfp
 1437      01
 1438              	.LVL103:
  92:dgesv_gauss-elim_gcc_optimized.c ****   {
 1439              		.loc 1 92 3 view .LVU385
 1440 0896 488B4590 		movq	-112(%rbp), %rax	# %sfp, ivtmp.172
 1441 089a 483B4588 		cmpq	-120(%rbp), %rax	# %sfp, ivtmp.172
 1442 089e 0F85CFF9 		jne	.L23	#,
 1442      FFFF
 1443 08a4 C5F877   		vzeroupper
 1444              	.LVL104:
 1445              	.L22:
 1446              	# dgesv_gauss-elim_gcc_optimized.c:180: }
 162:dgesv_gauss-elim_gcc_optimized.c **** 	  //printf("x_matrix[%d][%d] = %6.2f\n",i,u, x_matrix[i][u]);
 163:dgesv_gauss-elim_gcc_optimized.c **** 	}
 164:dgesv_gauss-elim_gcc_optimized.c **** 
 165:dgesv_gauss-elim_gcc_optimized.c ****   }
 166:dgesv_gauss-elim_gcc_optimized.c **** 
 167:dgesv_gauss-elim_gcc_optimized.c ****   //printf("end u\n");
 168:dgesv_gauss-elim_gcc_optimized.c **** 
 169:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("\nMy Solution:\n");
 170:dgesv_gauss-elim_gcc_optimized.c ****   for(i=0;i<nrhs;i++)
 171:dgesv_gauss-elim_gcc_optimized.c ****   {
 172:dgesv_gauss-elim_gcc_optimized.c ****   	for(j=0;j<ldb;j++)
 173:dgesv_gauss-elim_gcc_optimized.c ****         {
 174:dgesv_gauss-elim_gcc_optimized.c ****             //printf("x_matrix[%d][%d] = %6.2f\n", i, j, x_matrix[i][j]);
 175:dgesv_gauss-elim_gcc_optimized.c **** 	    printf( " %6.2f", x_matrix[i][j]);
 176:dgesv_gauss-elim_gcc_optimized.c ****         }
 177:dgesv_gauss-elim_gcc_optimized.c **** 	printf("\n");
 178:dgesv_gauss-elim_gcc_optimized.c ****   }*/
 179:dgesv_gauss-elim_gcc_optimized.c **** 
 180:dgesv_gauss-elim_gcc_optimized.c **** }
 1447              		.loc 1 180 1 view .LVU386
 1448 08a7 488B45C8 		movq	-56(%rbp), %rax	# D.55717, tmp709
 1449 08ab 64482B04 		subq	%fs:40, %rax	# MEM[(<address-space-1> long unsigned int *)40B], tmp709
 1449      25280000 
 1449      00
 1450 08b4 7527     		jne	.L94	#,
 1451 08b6 488D65D0 		leaq	-48(%rbp), %rsp	#,
 1452              	.LVL105:
 1453              		.loc 1 180 1 view .LVU387
 1454 08ba 31C0     		xorl	%eax, %eax	#
 1455 08bc 5B       		popq	%rbx	#
 1456 08bd 415A     		popq	%r10	#
 1457              		.cfi_remember_state
 1458              		.cfi_def_cfa 10, 0
 1459 08bf 415C     		popq	%r12	#
 1460 08c1 415D     		popq	%r13	#
 1461 08c3 415E     		popq	%r14	#
 1462 08c5 415F     		popq	%r15	#
 1463 08c7 5D       		popq	%rbp	#
 1464              	.LVL106:
 1465              		.loc 1 180 1 view .LVU388
 1466 08c8 498D62F8 		leaq	-8(%r10), %rsp	#,
 1467              		.cfi_def_cfa 7, 8
 1468              	.LVL107:
 1469              		.loc 1 180 1 view .LVU389
 1470 08cc C3       		ret	
 1471              	.LVL108:
 1472              	.L88:
 1473              		.cfi_restore_state
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1474              		.loc 1 116 10 is_stmt 1 view .LVU390
 1475              	# dgesv_gauss-elim_gcc_optimized.c:116: 	for(i=0;i<n-1;i++)
 116:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1476              		.loc 1 116 2 is_stmt 0 view .LVU391
 1477 08cd 4585ED   		testl	%r13d, %r13d	# _9
 1478 08d0 0F8FBDFC 		jg	.L59	#,
 1478      FFFF
 1479              	.LVL109:
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1480              		.loc 1 147 12 is_stmt 1 view .LVU392
 1481              	# dgesv_gauss-elim_gcc_optimized.c:147: 	for(i=n-1;i>=0;i--)
 147:dgesv_gauss-elim_gcc_optimized.c **** 	{
 1482              		.loc 1 147 2 is_stmt 0 view .LVU393
 1483 08d6 75B9     		jne	.L51	#,
 1484 08d8 E9C2FEFF 		jmp	.L50	#
 1484      FF
 1485              	.LVL110:
 1486              	.L94:
 1487              	# dgesv_gauss-elim_gcc_optimized.c:180: }
 1488              		.loc 1 180 1 view .LVU394
 1489 08dd E8000000 		call	__stack_chk_fail@PLT	#
 1489      00
 1490              	.LVL111:
 1491              		.loc 1 180 1 view .LVU395
 1492              		.cfi_endproc
 1493              	.LFE53:
 1495              		.section	.rodata.str1.1
 1496              	.LC7:
 1497 0014 0A202573 		.string	"\n %s\n"
 1497      0A00
 1498              	.LC8:
 1499 001a 2025362E 		.string	" %6.2f"
 1499      326600
 1500              		.text
 1501 08e2 66662E0F 		.p2align 4
 1501      1F840000 
 1501      0000000F 
 1501      1F00
 1502              		.globl	print_matrix
 1504              	print_matrix:
 1505              	.LVL112:
 1506              	.LFB54:
 181:dgesv_gauss-elim_gcc_optimized.c **** 
 182:dgesv_gauss-elim_gcc_optimized.c **** 
 183:dgesv_gauss-elim_gcc_optimized.c **** 
 184:dgesv_gauss-elim_gcc_optimized.c **** void print_matrix( char* desc, int r, int ld, double* a, int n ) {
 1507              		.loc 1 184 66 is_stmt 1 view -0
 1508              		.cfi_startproc
 185:dgesv_gauss-elim_gcc_optimized.c ****         int i, j;
 1509              		.loc 1 185 9 view .LVU397
 186:dgesv_gauss-elim_gcc_optimized.c ****         printf( "\n %s\n", desc );
 1510              		.loc 1 186 9 view .LVU398
 1511              	.LBB48:
 1512              	.LBI48:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 1513              		.loc 2 105 1 view .LVU399
 1514              	.LBB49:
 1515              		.loc 2 107 3 view .LVU400
 1516              	.LBE49:
 1517              	.LBE48:
 1518              	# dgesv_gauss-elim_gcc_optimized.c:184: void print_matrix( char* desc, int r, int ld, double* a, in
 184:dgesv_gauss-elim_gcc_optimized.c ****         int i, j;
 1519              		.loc 1 184 66 is_stmt 0 view .LVU401
 1520 08f0 4157     		pushq	%r15	#
 1521              		.cfi_def_cfa_offset 16
 1522              		.cfi_offset 15, -16
 1523              	.LBB54:
 1524              	.LBB50:
 1525              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1526              		.loc 2 107 10 view .LVU402
 1527 08f2 31C0     		xorl	%eax, %eax	#
 1528              	.LBE50:
 1529              	.LBE54:
 1530              	# dgesv_gauss-elim_gcc_optimized.c:184: void print_matrix( char* desc, int r, int ld, double* a, in
 184:dgesv_gauss-elim_gcc_optimized.c ****         int i, j;
 1531              		.loc 1 184 66 view .LVU403
 1532 08f4 4156     		pushq	%r14	#
 1533              		.cfi_def_cfa_offset 24
 1534              		.cfi_offset 14, -24
 1535 08f6 4189D6   		movl	%edx, %r14d	# tmp115, ld
 1536              	.LBB55:
 1537              	.LBB51:
 1538              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1539              		.loc 2 107 10 view .LVU404
 1540 08f9 4889FA   		movq	%rdi, %rdx	# desc,
 1541              	.LVL113:
 1542              		.loc 2 107 10 view .LVU405
 1543 08fc BF010000 		movl	$1, %edi	#,
 1543      00
 1544              	.LVL114:
 1545              		.loc 2 107 10 view .LVU406
 1546              	.LBE51:
 1547              	.LBE55:
 1548              	# dgesv_gauss-elim_gcc_optimized.c:184: void print_matrix( char* desc, int r, int ld, double* a, in
 184:dgesv_gauss-elim_gcc_optimized.c ****         int i, j;
 1549              		.loc 1 184 66 view .LVU407
 1550 0901 4155     		pushq	%r13	#
 1551              		.cfi_def_cfa_offset 32
 1552              		.cfi_offset 13, -32
 1553 0903 4154     		pushq	%r12	#
 1554              		.cfi_def_cfa_offset 40
 1555              		.cfi_offset 12, -40
 1556 0905 55       		pushq	%rbp	#
 1557              		.cfi_def_cfa_offset 48
 1558              		.cfi_offset 6, -48
 1559 0906 53       		pushq	%rbx	#
 1560              		.cfi_def_cfa_offset 56
 1561              		.cfi_offset 3, -56
 1562 0907 89F3     		movl	%esi, %ebx	# tmp114, r
 1563 0909 4883EC18 		subq	$24, %rsp	#,
 1564              		.cfi_def_cfa_offset 80
 1565              	# dgesv_gauss-elim_gcc_optimized.c:184: void print_matrix( char* desc, int r, int ld, double* a, in
 184:dgesv_gauss-elim_gcc_optimized.c ****         int i, j;
 1566              		.loc 1 184 66 view .LVU408
 1567 090d 893424   		movl	%esi, (%rsp)	# r, %sfp
 1568              	.LBB56:
 1569              	.LBB52:
 1570              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1571              		.loc 2 107 10 view .LVU409
 1572 0910 488D3500 		leaq	.LC7(%rip), %rsi	#,
 1572      000000
 1573              	.LVL115:
 1574              		.loc 2 107 10 view .LVU410
 1575              	.LBE52:
 1576              	.LBE56:
 1577              	# dgesv_gauss-elim_gcc_optimized.c:184: void print_matrix( char* desc, int r, int ld, double* a, in
 184:dgesv_gauss-elim_gcc_optimized.c ****         int i, j;
 1578              		.loc 1 184 66 view .LVU411
 1579 0917 48894C24 		movq	%rcx, 8(%rsp)	# tmp116, %sfp
 1579      08
 1580 091c 44894424 		movl	%r8d, 4(%rsp)	# tmp117, %sfp
 1580      04
 1581              	.LBB57:
 1582              	.LBB53:
 1583              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1584              		.loc 2 107 10 view .LVU412
 1585 0921 E8000000 		call	__printf_chk@PLT	#
 1585      00
 1586              	.LVL116:
 1587              		.loc 2 107 10 view .LVU413
 1588              	.LBE53:
 1589              	.LBE57:
 187:dgesv_gauss-elim_gcc_optimized.c ****         for( i = 0; i < r; i++ ) {
 1590              		.loc 1 187 9 is_stmt 1 view .LVU414
 1591              		.loc 1 187 21 view .LVU415
 1592              	# dgesv_gauss-elim_gcc_optimized.c:187:         for( i = 0; i < r; i++ ) {
 1593              		.loc 1 187 9 is_stmt 0 view .LVU416
 1594 0926 85DB     		testl	%ebx, %ebx	# r
 1595 0928 7E6F     		jle	.L102	#,
 1596 092a 4531ED   		xorl	%r13d, %r13d	# ivtmp.189
 1597              	# dgesv_gauss-elim_gcc_optimized.c:187:         for( i = 0; i < r; i++ ) {
 1598              		.loc 1 187 16 view .LVU417
 1599 092d 4531E4   		xorl	%r12d, %r12d	# i
 1600              	.LBB58:
 1601              	.LBB59:
 1602              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1603              		.loc 2 107 10 view .LVU418
 1604 0930 488D2D00 		leaq	.LC8(%rip), %rbp	#, tmp112
 1604      000000
 1605              	.LVL117:
 1606 0937 660F1F84 		.p2align 4,,10
 1606      00000000 
 1606      00
 1607              		.p2align 3
 1608              	.L97:
 1609              		.loc 2 107 10 view .LVU419
 1610              	.LBE59:
 1611              	.LBE58:
 188:dgesv_gauss-elim_gcc_optimized.c ****                 for( j = 0; j < ld; j++ ) printf( " %6.2f", a[i*n+j] );
 1612              		.loc 1 188 29 is_stmt 1 view .LVU420
 1613              	# dgesv_gauss-elim_gcc_optimized.c:188:                 for( j = 0; j < ld; j++ ) printf( " %6.2f",
 1614              		.loc 1 188 17 is_stmt 0 view .LVU421
 1615 0940 4585F6   		testl	%r14d, %r14d	# ld
 1616 0943 7E3B     		jle	.L100	#,
 1617 0945 488B5424 		movq	8(%rsp), %rdx	# %sfp, a
 1617      08
 1618 094a 4963CD   		movslq	%r13d, %rcx	# ivtmp.189, _38
 1619 094d 418D46FF 		leal	-1(%r14), %eax	#, tmp107
 1620 0951 4801C8   		addq	%rcx, %rax	# _38, tmp108
 1621 0954 4C8D3CCA 		leaq	(%rdx,%rcx,8), %r15	#, ivtmp.184
 1622 0958 488D5CC2 		leaq	8(%rdx,%rax,8), %rbx	#, _36
 1622      08
 1623              	.LVL118:
 1624 095d 0F1F00   		.p2align 4,,10
 1625              		.p2align 3
 1626              	.L98:
 1627              		.loc 1 188 43 is_stmt 1 discriminator 3 view .LVU422
 1628              	.LBB62:
 1629              	.LBI58:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 1630              		.loc 2 105 1 discriminator 3 view .LVU423
 1631              	.LBB60:
 1632              		.loc 2 107 3 discriminator 3 view .LVU424
 1633              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1634              		.loc 2 107 10 is_stmt 0 discriminator 3 view .LVU425
 1635 0960 C4C17B10 		vmovsd	(%r15), %xmm0	# MEM[base: _33, offset: 0B],
 1635      07
 1636 0965 4889EE   		movq	%rbp, %rsi	# tmp112,
 1637 0968 BF010000 		movl	$1, %edi	#,
 1637      00
 1638 096d B8010000 		movl	$1, %eax	#,
 1638      00
 1639              	.LBE60:
 1640              	.LBE62:
 1641              	# dgesv_gauss-elim_gcc_optimized.c:188:                 for( j = 0; j < ld; j++ ) printf( " %6.2f",
 1642              		.loc 1 188 17 discriminator 3 view .LVU426
 1643 0972 4983C708 		addq	$8, %r15	#, ivtmp.184
 1644              	.LVL119:
 1645              	.LBB63:
 1646              	.LBB61:
 1647              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1648              		.loc 2 107 10 discriminator 3 view .LVU427
 1649 0976 E8000000 		call	__printf_chk@PLT	#
 1649      00
 1650              	.LVL120:
 1651              		.loc 2 107 10 discriminator 3 view .LVU428
 1652              	.LBE61:
 1653              	.LBE63:
 1654              		.loc 1 188 37 is_stmt 1 discriminator 3 view .LVU429
 1655              		.loc 1 188 29 discriminator 3 view .LVU430
 1656              	# dgesv_gauss-elim_gcc_optimized.c:188:                 for( j = 0; j < ld; j++ ) printf( " %6.2f",
 1657              		.loc 1 188 17 is_stmt 0 discriminator 3 view .LVU431
 1658 097b 4939DF   		cmpq	%rbx, %r15	# _36, ivtmp.184
 1659 097e 75E0     		jne	.L98	#,
 1660              	.L100:
 189:dgesv_gauss-elim_gcc_optimized.c ****                 printf( "\n" );
 1661              		.loc 1 189 17 is_stmt 1 view .LVU432
 1662              	.LVL121:
 1663              	.LBB64:
 1664              	.LBI64:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 1665              		.loc 2 105 1 view .LVU433
 1666              	.LBB65:
 1667              		.loc 2 107 3 view .LVU434
 1668              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1669              		.loc 2 107 10 is_stmt 0 view .LVU435
 1670 0980 BF0A0000 		movl	$10, %edi	#,
 1670      00
 1671              	.LBE65:
 1672              	.LBE64:
 1673              	# dgesv_gauss-elim_gcc_optimized.c:187:         for( i = 0; i < r; i++ ) {
 187:dgesv_gauss-elim_gcc_optimized.c ****                 for( j = 0; j < ld; j++ ) printf( " %6.2f", a[i*n+j] );
 1674              		.loc 1 187 29 view .LVU436
 1675 0985 4183C401 		addl	$1, %r12d	#, i
 1676              	.LVL122:
 1677              	.LBB67:
 1678              	.LBB66:
 1679              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1680              		.loc 2 107 10 view .LVU437
 1681 0989 E8000000 		call	putchar@PLT	#
 1681      00
 1682              	.LVL123:
 1683              		.loc 2 107 10 view .LVU438
 1684              	.LBE66:
 1685              	.LBE67:
 187:dgesv_gauss-elim_gcc_optimized.c ****                 for( j = 0; j < ld; j++ ) printf( " %6.2f", a[i*n+j] );
 1686              		.loc 1 187 28 is_stmt 1 view .LVU439
 187:dgesv_gauss-elim_gcc_optimized.c ****                 for( j = 0; j < ld; j++ ) printf( " %6.2f", a[i*n+j] );
 1687              		.loc 1 187 21 view .LVU440
 1688              	# dgesv_gauss-elim_gcc_optimized.c:187:         for( i = 0; i < r; i++ ) {
 187:dgesv_gauss-elim_gcc_optimized.c ****                 for( j = 0; j < ld; j++ ) printf( " %6.2f", a[i*n+j] );
 1689              		.loc 1 187 9 is_stmt 0 view .LVU441
 1690 098e 44036C24 		addl	4(%rsp), %r13d	# %sfp, ivtmp.189
 1690      04
 1691 0993 44392424 		cmpl	%r12d, (%rsp)	# i, %sfp
 1692 0997 75A7     		jne	.L97	#,
 1693              	.LVL124:
 1694              	.L102:
 1695              	# dgesv_gauss-elim_gcc_optimized.c:191: }
 190:dgesv_gauss-elim_gcc_optimized.c ****         }
 191:dgesv_gauss-elim_gcc_optimized.c **** }
 1696              		.loc 1 191 1 view .LVU442
 1697 0999 4883C418 		addq	$24, %rsp	#,
 1698              		.cfi_def_cfa_offset 56
 1699 099d 5B       		popq	%rbx	#
 1700              		.cfi_def_cfa_offset 48
 1701 099e 5D       		popq	%rbp	#
 1702              		.cfi_def_cfa_offset 40
 1703 099f 415C     		popq	%r12	#
 1704              		.cfi_def_cfa_offset 32
 1705 09a1 415D     		popq	%r13	#
 1706              		.cfi_def_cfa_offset 24
 1707 09a3 415E     		popq	%r14	#
 1708              		.cfi_def_cfa_offset 16
 1709              	.LVL125:
 1710              		.loc 1 191 1 view .LVU443
 1711 09a5 415F     		popq	%r15	#
 1712              		.cfi_def_cfa_offset 8
 1713 09a7 C3       		ret	
 1714              		.cfi_endproc
 1715              	.LFE54:
 1717              		.section	.rodata.str1.8,"aMS",@progbits,1
 1718              		.align 8
 1719              	.LC10:
 1720 0000 54696D65 		.string	"Time taken by OpenBLAS LAPACK: %.2fs\n"
 1720      2074616B 
 1720      656E2062 
 1720      79204F70 
 1720      656E424C 
 1721 0026 0000     		.align 8
 1722              	.LC11:
 1723 0028 54696D65 		.string	"Time taken by my implementation: %.2fs\n"
 1723      2074616B 
 1723      656E2062 
 1723      79206D79 
 1723      20696D70 
 1724              		.section	.rodata.str1.1
 1725              	.LC12:
 1726 0021 52657375 		.string	"Result is ok!"
 1726      6C742069 
 1726      73206F6B 
 1726      2100
 1727              	.LC13:
 1728 002f 52657375 		.string	"Result is wrong!"
 1728      6C742069 
 1728      73207772 
 1728      6F6E6721 
 1728      00
 1729              		.section	.text.startup,"ax",@progbits
 1730              		.p2align 4
 1731              		.globl	main
 1733              	main:
 1734              	.LVL126:
 1735              	.LFB55:
 192:dgesv_gauss-elim_gcc_optimized.c **** 
 193:dgesv_gauss-elim_gcc_optimized.c **** void main(int argc, char *argv[])
 194:dgesv_gauss-elim_gcc_optimized.c **** {
 1736              		.loc 1 194 1 is_stmt 1 view -0
 1737              		.cfi_startproc
 195:dgesv_gauss-elim_gcc_optimized.c ****   int size = atoi(argv[1]);
 1738              		.loc 1 195 3 view .LVU445
 1739              	.LBB68:
 1740              	.LBI68:
 1741              		.file 3 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h"
   1:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Copyright (C) 1991-2020 Free Software Foundation, Inc.
   2:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    This file is part of the GNU C Library.
   3:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
   4:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    modify it under the terms of the GNU Lesser General Public
   6:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    License as published by the Free Software Foundation; either
   7:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
   9:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    Lesser General Public License for more details.
  13:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  14:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    You should have received a copy of the GNU Lesser General Public
  15:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    License along with the GNU C Library; if not, see
  16:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    <https://www.gnu.org/licenses/>.  */
  17:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  18:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /*
  19:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****  *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
  20:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****  */
  21:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  22:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifndef	_STDLIB_H
  23:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  24:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define __GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION
  25:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #include <bits/libc-header-start.h>
  26:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  27:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Get size_t, wchar_t and NULL from <stddef.h>.  */
  28:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define __need_size_t
  29:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define __need_wchar_t
  30:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define __need_NULL
  31:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #include <stddef.h>
  32:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  33:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __BEGIN_DECLS
  34:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  35:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define	_STDLIB_H	1
  36:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  37:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if (defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H
  38:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* XPG requires a few symbols from <sys/wait.h> being defined.  */
  39:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # include <bits/waitflags.h>
  40:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # include <bits/waitstatus.h>
  41:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  42:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Define the macros <sys/wait.h> also would define this way.  */
  43:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define WEXITSTATUS(status)	__WEXITSTATUS (status)
  44:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define WTERMSIG(status)	__WTERMSIG (status)
  45:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define WSTOPSIG(status)	__WSTOPSIG (status)
  46:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define WIFEXITED(status)	__WIFEXITED (status)
  47:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define WIFSIGNALED(status)	__WIFSIGNALED (status)
  48:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define WIFSTOPPED(status)	__WIFSTOPPED (status)
  49:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # ifdef __WIFCONTINUED
  50:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #  define WIFCONTINUED(status)	__WIFCONTINUED (status)
  51:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
  52:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif	/* X/Open or XPG7 and <sys/wait.h> not included.  */
  53:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  54:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* _FloatN API tests for enablement.  */
  55:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #include <bits/floatn.h>
  56:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  57:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Returned by `div'.  */
  58:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** typedef struct
  59:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   {
  60:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****     int quot;			/* Quotient.  */
  61:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****     int rem;			/* Remainder.  */
  62:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   } div_t;
  63:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  64:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Returned by `ldiv'.  */
  65:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifndef __ldiv_t_defined
  66:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** typedef struct
  67:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   {
  68:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****     long int quot;		/* Quotient.  */
  69:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****     long int rem;		/* Remainder.  */
  70:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   } ldiv_t;
  71:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define __ldiv_t_defined	1
  72:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
  73:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  74:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if defined __USE_ISOC99 && !defined __lldiv_t_defined
  75:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Returned by `lldiv'.  */
  76:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__ typedef struct
  77:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   {
  78:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****     long long int quot;		/* Quotient.  */
  79:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****     long long int rem;		/* Remainder.  */
  80:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   } lldiv_t;
  81:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # define __lldiv_t_defined	1
  82:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
  83:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  84:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  85:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* The largest number rand will return (same as INT_MAX).  */
  86:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define	RAND_MAX	2147483647
  87:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  88:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  89:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* We define these the same for all machines.
  90:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    Changes from this to the outside world should be done in `_exit'.  */
  91:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define	EXIT_FAILURE	1	/* Failing exit status.  */
  92:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define	EXIT_SUCCESS	0	/* Successful exit status.  */
  93:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  94:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  95:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Maximum length of a multibyte character in the current locale.  */
  96:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #define	MB_CUR_MAX	(__ctype_get_mb_cur_max ())
  97:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
  98:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
  99:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 100:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a floating-point number.  */
 101:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern double atof (const char *__nptr)
 102:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 103:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to an integer.  */
 104:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int atoi (const char *__nptr)
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 106:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a long integer.  */
 107:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long int atol (const char *__nptr)
 108:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 109:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 110:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifdef __USE_ISOC99
 111:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a long long integer.  */
 112:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__ extern long long int atoll (const char *__nptr)
 113:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 114:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 115:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 116:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a floating-point number.  */
 117:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern double strtod (const char *__restrict __nptr,
 118:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		      char **__restrict __endptr)
 119:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 120:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 121:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifdef	__USE_ISOC99
 122:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Likewise for `float' and `long double' sizes of floating-point numbers.  */
 123:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern float strtof (const char *__restrict __nptr,
 124:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		     char **__restrict __endptr) __THROW __nonnull ((1));
 125:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 126:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long double strtold (const char *__restrict __nptr,
 127:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr)
 128:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 129:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 130:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 131:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Likewise for '_FloatN' and '_FloatNx'.  */
 132:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 133:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 134:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float16 strtof16 (const char *__restrict __nptr,
 135:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			  char **__restrict __endptr)
 136:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 137:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 138:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 139:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 140:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float32 strtof32 (const char *__restrict __nptr,
 141:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			  char **__restrict __endptr)
 142:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 143:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 144:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 145:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 146:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float64 strtof64 (const char *__restrict __nptr,
 147:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			  char **__restrict __endptr)
 148:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 149:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 150:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 151:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 152:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float128 strtof128 (const char *__restrict __nptr,
 153:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr)
 154:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 155:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 156:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 157:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)
 158:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float32x strtof32x (const char *__restrict __nptr,
 159:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr)
 160:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 161:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 162:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 163:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)
 164:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float64x strtof64x (const char *__restrict __nptr,
 165:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr)
 166:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 167:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 168:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 169:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)
 170:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float128x strtof128x (const char *__restrict __nptr,
 171:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      char **__restrict __endptr)
 172:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 173:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 174:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 175:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a long integer.  */
 176:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long int strtol (const char *__restrict __nptr,
 177:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			char **__restrict __endptr, int __base)
 178:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 179:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to an unsigned long integer.  */
 180:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern unsigned long int strtoul (const char *__restrict __nptr,
 181:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				  char **__restrict __endptr, int __base)
 182:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 183:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 184:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifdef __USE_MISC
 185:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a quadword integer.  */
 186:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__
 187:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long long int strtoq (const char *__restrict __nptr,
 188:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			     char **__restrict __endptr, int __base)
 189:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 190:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to an unsigned quadword integer.  */
 191:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__
 192:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern unsigned long long int strtouq (const char *__restrict __nptr,
 193:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				       char **__restrict __endptr, int __base)
 194:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 195:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif /* Use misc.  */
 196:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 197:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifdef __USE_ISOC99
 198:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to a quadword integer.  */
 199:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__
 200:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long long int strtoll (const char *__restrict __nptr,
 201:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      char **__restrict __endptr, int __base)
 202:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 203:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a string to an unsigned quadword integer.  */
 204:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__
 205:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern unsigned long long int strtoull (const char *__restrict __nptr,
 206:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 					char **__restrict __endptr, int __base)
 207:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1));
 208:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif /* ISO C99 or use MISC.  */
 209:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 210:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Convert a floating-point number to a string.  */
 211:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __GLIBC_USE (IEC_60559_BFP_EXT_C2X)
 212:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromd (char *__dest, size_t __size, const char *__format,
 213:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		     double __f)
 214:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 215:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 216:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf (char *__dest, size_t __size, const char *__format,
 217:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		     float __f)
 218:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 219:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 220:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfroml (char *__dest, size_t __size, const char *__format,
 221:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		     long double __f)
 222:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 223:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 224:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 225:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT16 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 226:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf16 (char *__dest, size_t __size, const char * __format,
 227:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		       _Float16 __f)
 228:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 229:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 230:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 231:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT32 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 232:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf32 (char *__dest, size_t __size, const char * __format,
 233:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		       _Float32 __f)
 234:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 235:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 236:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 237:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT64 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 238:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf64 (char *__dest, size_t __size, const char * __format,
 239:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		       _Float64 __f)
 240:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 241:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 242:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 243:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT128 && __GLIBC_USE (IEC_60559_TYPES_EXT)
 244:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf128 (char *__dest, size_t __size, const char * __format,
 245:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			_Float128 __f)
 246:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 247:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 248:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 249:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT32X && __GLIBC_USE (IEC_60559_TYPES_EXT)
 250:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf32x (char *__dest, size_t __size, const char * __format,
 251:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			_Float32x __f)
 252:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 253:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 254:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 255:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT64X && __GLIBC_USE (IEC_60559_TYPES_EXT)
 256:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf64x (char *__dest, size_t __size, const char * __format,
 257:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			_Float64x __f)
 258:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 259:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 260:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 261:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #if __HAVE_FLOAT128X && __GLIBC_USE (IEC_60559_TYPES_EXT)
 262:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern int strfromf128x (char *__dest, size_t __size, const char * __format,
 263:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			 _Float128x __f)
 264:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((3));
 265:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif
 266:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 267:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 268:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifdef __USE_GNU
 269:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** /* Parallel versions of the functions above which take the locale to
 270:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    use as an additional parameter.  These are GNU extensions inspired
 271:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****    by the POSIX.1-2008 extended locale API.  */
 272:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # include <bits/types/locale_t.h>
 273:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 274:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long int strtol_l (const char *__restrict __nptr,
 275:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			  char **__restrict __endptr, int __base,
 276:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			  locale_t __loc) __THROW __nonnull ((1, 4));
 277:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 278:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern unsigned long int strtoul_l (const char *__restrict __nptr,
 279:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				    char **__restrict __endptr,
 280:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				    int __base, locale_t __loc)
 281:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 4));
 282:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 283:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__
 284:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long long int strtoll_l (const char *__restrict __nptr,
 285:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				char **__restrict __endptr, int __base,
 286:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				locale_t __loc)
 287:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 4));
 288:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 289:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extension__
 290:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern unsigned long long int strtoull_l (const char *__restrict __nptr,
 291:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 					  char **__restrict __endptr,
 292:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 					  int __base, locale_t __loc)
 293:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 4));
 294:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 295:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern double strtod_l (const char *__restrict __nptr,
 296:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			char **__restrict __endptr, locale_t __loc)
 297:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 298:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 299:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern float strtof_l (const char *__restrict __nptr,
 300:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 		       char **__restrict __endptr, locale_t __loc)
 301:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 302:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 303:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern long double strtold_l (const char *__restrict __nptr,
 304:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      char **__restrict __endptr,
 305:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      locale_t __loc)
 306:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 307:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 308:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT16
 309:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float16 strtof16_l (const char *__restrict __nptr,
 310:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr,
 311:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    locale_t __loc)
 312:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 313:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 314:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 315:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT32
 316:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float32 strtof32_l (const char *__restrict __nptr,
 317:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr,
 318:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    locale_t __loc)
 319:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 320:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 321:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 322:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT64
 323:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float64 strtof64_l (const char *__restrict __nptr,
 324:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    char **__restrict __endptr,
 325:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			    locale_t __loc)
 326:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 327:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 328:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 329:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT128
 330:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float128 strtof128_l (const char *__restrict __nptr,
 331:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      char **__restrict __endptr,
 332:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      locale_t __loc)
 333:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 334:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 335:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 336:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT32X
 337:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float32x strtof32x_l (const char *__restrict __nptr,
 338:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      char **__restrict __endptr,
 339:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      locale_t __loc)
 340:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 341:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 342:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 343:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT64X
 344:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float64x strtof64x_l (const char *__restrict __nptr,
 345:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      char **__restrict __endptr,
 346:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 			      locale_t __loc)
 347:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 348:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 349:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 350:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # if __HAVE_FLOAT128X
 351:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** extern _Float128x strtof128x_l (const char *__restrict __nptr,
 352:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				char **__restrict __endptr,
 353:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 				locale_t __loc)
 354:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3));
 355:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** # endif
 356:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #endif /* GNU */
 357:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 358:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** 
 359:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** #ifdef __USE_EXTERN_INLINES
 360:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __extern_inline int
 361:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** __NTH (atoi (const char *__nptr))
 1742              		.loc 3 361 1 view .LVU446
 1743              	.LBB69:
 362:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h **** {
 363:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h ****   return (int) strtol (__nptr, (char **) NULL, 10);
 1744              		.loc 3 363 3 view .LVU447
 1745              	.LBE69:
 1746              	.LBE68:
 1747              	# dgesv_gauss-elim_gcc_optimized.c:194: {
 194:dgesv_gauss-elim_gcc_optimized.c ****   int size = atoi(argv[1]);
 1748              		.loc 1 194 1 is_stmt 0 view .LVU448
 1749 0000 4157     		pushq	%r15	#
 1750              		.cfi_def_cfa_offset 16
 1751              		.cfi_offset 15, -16
 1752              	.LVL127:
 1753              	.LBB73:
 1754              	.LBB70:
 1755              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h:363:   return (int) str
 1756              		.loc 3 363 16 view .LVU449
 1757 0002 BA0A0000 		movl	$10, %edx	#,
 1757      00
 1758              	.LBE70:
 1759              	.LBE73:
 1760              	# dgesv_gauss-elim_gcc_optimized.c:194: {
 194:dgesv_gauss-elim_gcc_optimized.c ****   int size = atoi(argv[1]);
 1761              		.loc 1 194 1 view .LVU450
 1762 0007 4156     		pushq	%r14	#
 1763              		.cfi_def_cfa_offset 24
 1764              		.cfi_offset 14, -24
 1765 0009 4155     		pushq	%r13	#
 1766              		.cfi_def_cfa_offset 32
 1767              		.cfi_offset 13, -32
 1768 000b 4154     		pushq	%r12	#
 1769              		.cfi_def_cfa_offset 40
 1770              		.cfi_offset 12, -40
 1771 000d 55       		pushq	%rbp	#
 1772              		.cfi_def_cfa_offset 48
 1773              		.cfi_offset 6, -48
 1774 000e 53       		pushq	%rbx	#
 1775              		.cfi_def_cfa_offset 56
 1776              		.cfi_offset 3, -56
 1777 000f 4883EC28 		subq	$40, %rsp	#,
 1778              		.cfi_def_cfa_offset 96
 1779              	.LBB74:
 1780              	.LBB71:
 1781              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h:363:   return (int) str
 1782              		.loc 3 363 16 view .LVU451
 1783 0013 488B7E08 		movq	8(%rsi), %rdi	# MEM[(char * *)argv_16(D) + 8B], MEM[(char * *)argv_16(D) + 8B]
 1784              	.LVL128:
 1785              		.loc 3 363 16 view .LVU452
 1786 0017 31F6     		xorl	%esi, %esi	#
 1787              	.LVL129:
 1788              		.loc 3 363 16 view .LVU453
 1789 0019 E8000000 		call	strtol@PLT	#
 1789      00
 1790              	.LVL130:
 1791              	.LBE71:
 1792              	.LBE74:
 1793              	# dgesv_gauss-elim_gcc_optimized.c:200:   aref = (double *) malloc(sizeof(double) * size * size);
 196:dgesv_gauss-elim_gcc_optimized.c **** 
 197:dgesv_gauss-elim_gcc_optimized.c ****   double *a, *aref;
 198:dgesv_gauss-elim_gcc_optimized.c ****   double *b, *bref;
 199:dgesv_gauss-elim_gcc_optimized.c **** 
 200:dgesv_gauss-elim_gcc_optimized.c ****   aref = (double *) malloc(sizeof(double) * size * size);
 1794              		.loc 1 200 50 view .LVU454
 1795 001e 4C63F0   		movslq	%eax, %r14	# _40, _2
 1796              	.LBB75:
 1797              	.LBB72:
 1798              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/stdlib.h:363:   return (int) str
 1799              		.loc 3 363 16 view .LVU455
 1800 0021 4989C4   		movq	%rax, %r12	# tmp157, _40
 1801              	.LVL131:
 1802              		.loc 3 363 16 view .LVU456
 1803              	.LBE72:
 1804              	.LBE75:
 197:dgesv_gauss-elim_gcc_optimized.c ****   double *b, *bref;
 1805              		.loc 1 197 3 is_stmt 1 view .LVU457
 198:dgesv_gauss-elim_gcc_optimized.c **** 
 1806              		.loc 1 198 3 view .LVU458
 1807              		.loc 1 200 3 view .LVU459
 1808              	# dgesv_gauss-elim_gcc_optimized.c:200:   aref = (double *) malloc(sizeof(double) * size * size);
 1809              		.loc 1 200 50 is_stmt 0 view .LVU460
 1810 0024 4D89F7   		movq	%r14, %r15	# _2, tmp121
 1811 0027 4D0FAFFE 		imulq	%r14, %r15	# _2, tmp121
 1812              	# dgesv_gauss-elim_gcc_optimized.c:212:   int *ipiv = (int *) malloc(sizeof(int) * size);
 201:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 202:dgesv_gauss-elim_gcc_optimized.c ****   a = generate_matrix(size);
 203:dgesv_gauss-elim_gcc_optimized.c ****   //aref = generate_matrix(size);
 204:dgesv_gauss-elim_gcc_optimized.c ****   memcpy(aref, a, size*size*sizeof(double));
 205:dgesv_gauss-elim_gcc_optimized.c ****   b = generate_matrix(size);
 206:dgesv_gauss-elim_gcc_optimized.c ****   //bref = generate_matrix(size);
 207:dgesv_gauss-elim_gcc_optimized.c ****   //bref = b;
 208:dgesv_gauss-elim_gcc_optimized.c ****   memcpy(bref, b, size*size*sizeof(double));
 209:dgesv_gauss-elim_gcc_optimized.c **** 
 210:dgesv_gauss-elim_gcc_optimized.c ****   // Using LAPACK dgesv OpenBLAS implementation to solve the system
 211:dgesv_gauss-elim_gcc_optimized.c ****   int n = size, nrhs = size, lda = size, ldb = size, info;
 212:dgesv_gauss-elim_gcc_optimized.c ****   int *ipiv = (int *) malloc(sizeof(int) * size);
 1813              		.loc 1 212 23 view .LVU461
 1814 002b 49C1E602 		salq	$2, %r14	#, _6
 1815              	# dgesv_gauss-elim_gcc_optimized.c:200:   aref = (double *) malloc(sizeof(double) * size * size);
 200:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 1816              		.loc 1 200 21 view .LVU462
 1817 002f 49C1E703 		salq	$3, %r15	#, _4
 1818 0033 4C89FF   		movq	%r15, %rdi	# _4,
 1819 0036 E8000000 		call	malloc@PLT	#
 1819      00
 1820              	.LVL132:
 1821              	# dgesv_gauss-elim_gcc_optimized.c:201:   bref = (double *) malloc(sizeof(double) * size * size);
 201:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 1822              		.loc 1 201 21 view .LVU463
 1823 003b 4C89FF   		movq	%r15, %rdi	# _4,
 1824              	# dgesv_gauss-elim_gcc_optimized.c:200:   aref = (double *) malloc(sizeof(double) * size * size);
 200:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 1825              		.loc 1 200 21 view .LVU464
 1826 003e 4989C5   		movq	%rax, %r13	# tmp158, tmp122
 1827              	.LVL133:
 201:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 1828              		.loc 1 201 3 is_stmt 1 view .LVU465
 1829              	# dgesv_gauss-elim_gcc_optimized.c:201:   bref = (double *) malloc(sizeof(double) * size * size);
 201:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 1830              		.loc 1 201 21 is_stmt 0 view .LVU466
 1831 0041 E8000000 		call	malloc@PLT	#
 1831      00
 1832              	.LVL134:
 1833              	# dgesv_gauss-elim_gcc_optimized.c:202:   a = generate_matrix(size);
 202:dgesv_gauss-elim_gcc_optimized.c ****   //aref = generate_matrix(size);
 1834              		.loc 1 202 7 view .LVU467
 1835 0046 4489E7   		movl	%r12d, %edi	# _40,
 1836              	# dgesv_gauss-elim_gcc_optimized.c:201:   bref = (double *) malloc(sizeof(double) * size * size);
 201:dgesv_gauss-elim_gcc_optimized.c ****   bref = (double *) malloc(sizeof(double) * size * size);
 1837              		.loc 1 201 21 view .LVU468
 1838 0049 4889C3   		movq	%rax, %rbx	# tmp159, bref
 1839              	.LVL135:
 202:dgesv_gauss-elim_gcc_optimized.c ****   //aref = generate_matrix(size);
 1840              		.loc 1 202 3 is_stmt 1 view .LVU469
 1841              	# dgesv_gauss-elim_gcc_optimized.c:202:   a = generate_matrix(size);
 202:dgesv_gauss-elim_gcc_optimized.c ****   //aref = generate_matrix(size);
 1842              		.loc 1 202 7 is_stmt 0 view .LVU470
 1843 004c E8000000 		call	generate_matrix	#
 1843      00
 1844              	.LVL136:
 204:dgesv_gauss-elim_gcc_optimized.c ****   b = generate_matrix(size);
 1845              		.loc 1 204 3 is_stmt 1 view .LVU471
 1846              	# dgesv_gauss-elim_gcc_optimized.c:204:   memcpy(aref, a, size*size*sizeof(double));
 204:dgesv_gauss-elim_gcc_optimized.c ****   b = generate_matrix(size);
 1847              		.loc 1 204 23 is_stmt 0 view .LVU472
 1848 0051 4589E3   		movl	%r12d, %r11d	# _40, _5
 1849              	.LBB76:
 1850              	.LBB77:
 1851              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h:34:   re
 1852              		.file 4 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h"
   1:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
   4:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
   9:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
  14:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
  18:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
  21:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** #ifndef _STRING_H
  22:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** #endif
  24:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
  25:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** #endif
  29:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 
  30:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** __fortify_function void *
  31:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 	       size_t __len))
  33:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** {
  34:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 1853              		.loc 4 34 10 view .LVU473
 1854 0054 4C89FA   		movq	%r15, %rdx	# _4,
 1855 0057 4C89EF   		movq	%r13, %rdi	# tmp122,
 1856              	.LBE77:
 1857              	.LBE76:
 1858              	# dgesv_gauss-elim_gcc_optimized.c:204:   memcpy(aref, a, size*size*sizeof(double));
 204:dgesv_gauss-elim_gcc_optimized.c ****   b = generate_matrix(size);
 1859              		.loc 1 204 23 view .LVU474
 1860 005a 450FAFDC 		imull	%r12d, %r11d	# _40, _5
 1861              	.LBB80:
 1862              	.LBB78:
 1863              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h:34:   re
 1864              		.loc 4 34 10 view .LVU475
 1865 005e 4889C6   		movq	%rax, %rsi	# a,
 1866 0061 48894424 		movq	%rax, 16(%rsp)	# a, %sfp
 1866      10
 1867              	.LBE78:
 1868              	.LBE80:
 1869              	# dgesv_gauss-elim_gcc_optimized.c:204:   memcpy(aref, a, size*size*sizeof(double));
 204:dgesv_gauss-elim_gcc_optimized.c ****   b = generate_matrix(size);
 1870              		.loc 1 204 23 view .LVU476
 1871 0066 44895C24 		movl	%r11d, 28(%rsp)	# _5, %sfp
 1871      1C
 1872              	.LVL137:
 1873              	.LBB81:
 1874              	.LBI76:
  31:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 	       size_t __len))
 1875              		.loc 4 31 1 is_stmt 1 view .LVU477
 1876              	.LBB79:
 1877              		.loc 4 34 3 view .LVU478
 1878              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h:34:   re
 1879              		.loc 4 34 10 is_stmt 0 view .LVU479
 1880 006b E8000000 		call	memcpy@PLT	#
 1880      00
 1881              	.LVL138:
 1882              		.loc 4 34 10 view .LVU480
 1883              	.LBE79:
 1884              	.LBE81:
 205:dgesv_gauss-elim_gcc_optimized.c ****   //bref = generate_matrix(size);
 1885              		.loc 1 205 3 is_stmt 1 view .LVU481
 1886              	# dgesv_gauss-elim_gcc_optimized.c:205:   b = generate_matrix(size);
 205:dgesv_gauss-elim_gcc_optimized.c ****   //bref = generate_matrix(size);
 1887              		.loc 1 205 7 is_stmt 0 view .LVU482
 1888 0070 4489E7   		movl	%r12d, %edi	# _40,
 1889 0073 E8000000 		call	generate_matrix	#
 1889      00
 1890              	.LVL139:
 1891              	.LBB82:
 1892              	.LBB83:
 1893              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h:34:   re
 1894              		.loc 4 34 10 view .LVU483
 1895 0078 4C89FA   		movq	%r15, %rdx	# _4,
 1896 007b 4889DF   		movq	%rbx, %rdi	# bref,
 1897 007e 4889C6   		movq	%rax, %rsi	# b,
 1898              	.LBE83:
 1899              	.LBE82:
 1900              	# dgesv_gauss-elim_gcc_optimized.c:205:   b = generate_matrix(size);
 205:dgesv_gauss-elim_gcc_optimized.c ****   //bref = generate_matrix(size);
 1901              		.loc 1 205 7 view .LVU484
 1902 0081 4889C5   		movq	%rax, %rbp	# tmp161, b
 1903              	.LVL140:
 208:dgesv_gauss-elim_gcc_optimized.c **** 
 1904              		.loc 1 208 3 is_stmt 1 view .LVU485
 1905              	.LBB85:
 1906              	.LBI82:
  31:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h **** 	       size_t __len))
 1907              		.loc 4 31 1 view .LVU486
 1908              	.LBB84:
 1909              		.loc 4 34 3 view .LVU487
 1910              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/string_fortified.h:34:   re
 1911              		.loc 4 34 10 is_stmt 0 view .LVU488
 1912 0084 E8000000 		call	memcpy@PLT	#
 1912      00
 1913              	.LVL141:
 1914              		.loc 4 34 10 view .LVU489
 1915              	.LBE84:
 1916              	.LBE85:
 211:dgesv_gauss-elim_gcc_optimized.c ****   int *ipiv = (int *) malloc(sizeof(int) * size);
 1917              		.loc 1 211 3 is_stmt 1 view .LVU490
 1918              		.loc 1 212 3 view .LVU491
 1919              	# dgesv_gauss-elim_gcc_optimized.c:212:   int *ipiv = (int *) malloc(sizeof(int) * size);
 1920              		.loc 1 212 23 is_stmt 0 view .LVU492
 1921 0089 4C89F7   		movq	%r14, %rdi	# _6,
 1922 008c E8000000 		call	malloc@PLT	#
 1922      00
 1923              	.LVL142:
 1924 0091 48894424 		movq	%rax, 8(%rsp)	# tmp134, %sfp
 1924      08
 1925              	.LVL143:
 213:dgesv_gauss-elim_gcc_optimized.c **** 
 214:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("matrix a :\n");
 215:dgesv_gauss-elim_gcc_optimized.c ****   print_matrix( "Initial A", n, lda, a, size );
 216:dgesv_gauss-elim_gcc_optimized.c **** 
 217:dgesv_gauss-elim_gcc_optimized.c ****   printf("matrix aref :\n");
 218:dgesv_gauss-elim_gcc_optimized.c **** 
 219:dgesv_gauss-elim_gcc_optimized.c ****   print_matrix( "Initial Aref", n, lda, aref, size );
 220:dgesv_gauss-elim_gcc_optimized.c ****   */
 221:dgesv_gauss-elim_gcc_optimized.c ****   clock_t tStart = clock();
 1926              		.loc 1 221 3 is_stmt 1 view .LVU493
 1927              	# dgesv_gauss-elim_gcc_optimized.c:221:   clock_t tStart = clock();
 1928              		.loc 1 221 20 is_stmt 0 view .LVU494
 1929 0096 E8000000 		call	clock@PLT	#
 1929      00
 1930              	.LVL144:
 1931              	# dgesv_gauss-elim_gcc_optimized.c:227:   info = LAPACKE_dgesv(LAPACK_ROW_MAJOR, n, nrhs, aref, lda
 222:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("openblas\n");
 223:dgesv_gauss-elim_gcc_optimized.c ****   print_matrix( "Initial B", nrhs, ldb, b, size );
 224:dgesv_gauss-elim_gcc_optimized.c ****   print_matrix( "Initial Bref", nrhs, ldb, bref, size );
 225:dgesv_gauss-elim_gcc_optimized.c ****   */
 226:dgesv_gauss-elim_gcc_optimized.c ****   //info = LAPACKE_dgesv(LAPACK_ROW_MAJOR, n, nrhs, aref, lda, ipiv, bref, ldb);
 227:dgesv_gauss-elim_gcc_optimized.c ****   info = LAPACKE_dgesv(LAPACK_ROW_MAJOR, n, nrhs, aref, lda, ipiv, bref, ldb);
 1932              		.loc 1 227 10 view .LVU495
 1933 009b 4154     		pushq	%r12	# _40
 1934              		.cfi_def_cfa_offset 104
 1935 009d 4589E0   		movl	%r12d, %r8d	# _40,
 1936 00a0 4C89E9   		movq	%r13, %rcx	# tmp122,
 1937 00a3 53       		pushq	%rbx	# bref
 1938              		.cfi_def_cfa_offset 112
 1939 00a4 4C8B4C24 		movq	24(%rsp), %r9	# %sfp, tmp134
 1939      18
 1940 00a9 4489E2   		movl	%r12d, %edx	# _40,
 1941 00ac 4489E6   		movl	%r12d, %esi	# _40,
 1942 00af BF650000 		movl	$101, %edi	#,
 1942      00
 1943              	# dgesv_gauss-elim_gcc_optimized.c:221:   clock_t tStart = clock();
 221:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("openblas\n");
 1944              		.loc 1 221 20 view .LVU496
 1945 00b4 4989C7   		movq	%rax, %r15	# tmp163, tStart
 1946              	.LVL145:
 1947              		.loc 1 227 3 is_stmt 1 view .LVU497
 1948              	# dgesv_gauss-elim_gcc_optimized.c:227:   info = LAPACKE_dgesv(LAPACK_ROW_MAJOR, n, nrhs, aref, lda
 1949              		.loc 1 227 10 is_stmt 0 view .LVU498
 1950 00b7 E8000000 		call	LAPACKE_dgesv@PLT	#
 1950      00
 1951              	.LVL146:
 228:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("info = %d\n",info);
 229:dgesv_gauss-elim_gcc_optimized.c ****   print_matrix( "LAPACKE_dgesv Solution", nrhs, ldb, bref, size );
 230:dgesv_gauss-elim_gcc_optimized.c ****   */
 231:dgesv_gauss-elim_gcc_optimized.c ****   printf("Time taken by OpenBLAS LAPACK: %.2fs\n", (double) (clock() - tStart) / CLOCKS_PER_SEC);
 1952              		.loc 1 231 3 is_stmt 1 view .LVU499
 1953              	# dgesv_gauss-elim_gcc_optimized.c:231:   printf("Time taken by OpenBLAS LAPACK: %.2fs\n", (double)
 1954              		.loc 1 231 62 is_stmt 0 view .LVU500
 1955 00bc E8000000 		call	clock@PLT	#
 1955      00
 1956              	.LVL147:
 1957              	.LBB86:
 1958              	.LBI86:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 1959              		.loc 2 105 1 is_stmt 1 view .LVU501
 1960              	.LBB87:
 1961              		.loc 2 107 3 view .LVU502
 1962              	.LBE87:
 1963              	.LBE86:
 1964              	# dgesv_gauss-elim_gcc_optimized.c:231:   printf("Time taken by OpenBLAS LAPACK: %.2fs\n", (double)
 1965              		.loc 1 231 52 is_stmt 0 view .LVU503
 1966 00c1 C5E857D2 		vxorps	%xmm2, %xmm2, %xmm2	# tmp168
 1967              	.LBB91:
 1968              	.LBB88:
 1969              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1970              		.loc 2 107 10 view .LVU504
 1971 00c5 BF010000 		movl	$1, %edi	#,
 1971      00
 1972 00ca 488D3500 		leaq	.LC10(%rip), %rsi	#,
 1972      000000
 1973              	.LBE88:
 1974              	.LBE91:
 1975              	# dgesv_gauss-elim_gcc_optimized.c:231:   printf("Time taken by OpenBLAS LAPACK: %.2fs\n", (double)
 1976              		.loc 1 231 70 view .LVU505
 1977 00d1 4C29F8   		subq	%r15, %rax	# tStart, tmp135
 1978              	# dgesv_gauss-elim_gcc_optimized.c:231:   printf("Time taken by OpenBLAS LAPACK: %.2fs\n", (double)
 1979              		.loc 1 231 52 view .LVU506
 1980 00d4 C4E1EB2A 		vcvtsi2sdq	%rax, %xmm2, %xmm0	# tmp135, tmp168, tmp169
 1980      C0
 1981              	.LBB92:
 1982              	.LBB89:
 1983              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1984              		.loc 2 107 10 view .LVU507
 1985 00d9 B8010000 		movl	$1, %eax	#,
 1985      00
 1986              	.LBE89:
 1987              	.LBE92:
 1988              	# dgesv_gauss-elim_gcc_optimized.c:231:   printf("Time taken by OpenBLAS LAPACK: %.2fs\n", (double)
 1989              		.loc 1 231 3 view .LVU508
 1990 00de C5FB5E05 		vdivsd	.LC9(%rip), %xmm0, %xmm0	#, tmp136, tmp137
 1990      00000000 
 1991              	.LBB93:
 1992              	.LBB90:
 1993              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 1994              		.loc 2 107 10 view .LVU509
 1995 00e6 E8000000 		call	__printf_chk@PLT	#
 1995      00
 1996              	.LVL148:
 1997              		.loc 2 107 10 view .LVU510
 1998              	.LBE90:
 1999              	.LBE93:
 232:dgesv_gauss-elim_gcc_optimized.c ****   //printf("ipiv 1 = %d\n", ipiv[n-1]);
 233:dgesv_gauss-elim_gcc_optimized.c ****   int *ipiv2 = (int *) malloc(sizeof(int) * size);
 2000              		.loc 1 233 3 is_stmt 1 view .LVU511
 2001              	# dgesv_gauss-elim_gcc_optimized.c:233:   int *ipiv2 = (int *) malloc(sizeof(int) * size);
 2002              		.loc 1 233 24 is_stmt 0 view .LVU512
 2003 00eb 4C89F7   		movq	%r14, %rdi	# _6,
 2004 00ee E8000000 		call	malloc@PLT	#
 2004      00
 2005              	.LVL149:
 2006 00f3 48894424 		movq	%rax, 24(%rsp)	# tmp139, %sfp
 2006      18
 2007              	.LVL150:
 234:dgesv_gauss-elim_gcc_optimized.c **** 
 235:dgesv_gauss-elim_gcc_optimized.c ****   tStart = clock();
 2008              		.loc 1 235 3 is_stmt 1 view .LVU513
 2009              	# dgesv_gauss-elim_gcc_optimized.c:235:   tStart = clock();
 2010              		.loc 1 235 12 is_stmt 0 view .LVU514
 2011 00f8 E8000000 		call	clock@PLT	#
 2011      00
 2012              	.LVL151:
 2013              	# dgesv_gauss-elim_gcc_optimized.c:238:   my_dgesv(n, nrhs, a, lda, ipiv2, b, ldb);
 236:dgesv_gauss-elim_gcc_optimized.c ****   /* n: nb rows of matrix a, nrhs: nb rows of matrix b, matrix a, lda: nb cols 
 237:dgesv_gauss-elim_gcc_optimized.c ****   of matrix a, ipiv: Pivot indices, matrix b, ldb: nb cols of matrix b */
 238:dgesv_gauss-elim_gcc_optimized.c ****   my_dgesv(n, nrhs, a, lda, ipiv2, b, ldb);
 2014              		.loc 1 238 3 view .LVU515
 2015 00fd 4C8B5424 		movq	32(%rsp), %r10	# %sfp, a
 2015      20
 2016 0102 4989E9   		movq	%rbp, %r9	# b,
 2017 0105 4489E1   		movl	%r12d, %ecx	# _40,
 2018 0108 4C8B4424 		movq	24(%rsp), %r8	# %sfp, tmp139
 2018      18
 2019 010d 4489E6   		movl	%r12d, %esi	# _40,
 2020 0110 4489E7   		movl	%r12d, %edi	# _40,
 2021 0113 44892424 		movl	%r12d, (%rsp)	# _40,
 2022 0117 4C89D2   		movq	%r10, %rdx	# a,
 2023              	# dgesv_gauss-elim_gcc_optimized.c:235:   tStart = clock();
 235:dgesv_gauss-elim_gcc_optimized.c ****   /* n: nb rows of matrix a, nrhs: nb rows of matrix b, matrix a, lda: nb cols 
 2024              		.loc 1 235 12 view .LVU516
 2025 011a 4989C6   		movq	%rax, %r14	# tmp166, tStart
 2026              	.LVL152:
 2027              		.loc 1 238 3 is_stmt 1 view .LVU517
 2028 011d E8000000 		call	my_dgesv	#
 2028      00
 2029              	.LVL153:
 239:dgesv_gauss-elim_gcc_optimized.c **** 
 240:dgesv_gauss-elim_gcc_optimized.c ****   //print_matrix( "NEW B", nrhs, ldb, b, size );
 241:dgesv_gauss-elim_gcc_optimized.c **** 
 242:dgesv_gauss-elim_gcc_optimized.c ****   //print_matrix( "expected Solution", n, nrhs, bref, ldb );
 243:dgesv_gauss-elim_gcc_optimized.c ****   
 244:dgesv_gauss-elim_gcc_optimized.c ****   /*printf("bref :\n");
 245:dgesv_gauss-elim_gcc_optimized.c ****   for(int i=0;i<nrhs;i++)
 246:dgesv_gauss-elim_gcc_optimized.c ****   {
 247:dgesv_gauss-elim_gcc_optimized.c **** 	for(int j=0;j<ldb;j++)
 248:dgesv_gauss-elim_gcc_optimized.c **** 	{
 249:dgesv_gauss-elim_gcc_optimized.c **** 	  printf( " %6.2f", bref[i*n+j]);
 250:dgesv_gauss-elim_gcc_optimized.c **** 	}
 251:dgesv_gauss-elim_gcc_optimized.c **** 	printf("\n");
 252:dgesv_gauss-elim_gcc_optimized.c ****   }*/
 253:dgesv_gauss-elim_gcc_optimized.c **** 
 254:dgesv_gauss-elim_gcc_optimized.c ****   //printf("result : %d\n", my_dgesv(size, a, ipiv2, b));
 255:dgesv_gauss-elim_gcc_optimized.c ****   //print_matrix( "Solution", n, nrhs, b, ldb );
 256:dgesv_gauss-elim_gcc_optimized.c ****   //printf("Hi\n");
 257:dgesv_gauss-elim_gcc_optimized.c ****   printf("Time taken by my implementation: %.2fs\n", (double) (clock() - tStart) / CLOCKS_PER_SEC);
 2030              		.loc 1 257 3 view .LVU518
 2031              	# dgesv_gauss-elim_gcc_optimized.c:257:   printf("Time taken by my implementation: %.2fs\n", (doubl
 2032              		.loc 1 257 64 is_stmt 0 view .LVU519
 2033 0122 E8000000 		call	clock@PLT	#
 2033      00
 2034              	.LVL154:
 2035              	.LBB94:
 2036              	.LBI94:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 2037              		.loc 2 105 1 is_stmt 1 view .LVU520
 2038              	.LBB95:
 2039              		.loc 2 107 3 view .LVU521
 2040              	.LBE95:
 2041              	.LBE94:
 2042              	# dgesv_gauss-elim_gcc_optimized.c:257:   printf("Time taken by my implementation: %.2fs\n", (doubl
 2043              		.loc 1 257 54 is_stmt 0 view .LVU522
 2044 0127 C5E857D2 		vxorps	%xmm2, %xmm2, %xmm2	# tmp168
 2045              	.LBB99:
 2046              	.LBB96:
 2047              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 2048              		.loc 2 107 10 view .LVU523
 2049 012b BF010000 		movl	$1, %edi	#,
 2049      00
 2050 0130 488D3500 		leaq	.LC11(%rip), %rsi	#,
 2050      000000
 2051              	.LBE96:
 2052              	.LBE99:
 2053              	# dgesv_gauss-elim_gcc_optimized.c:257:   printf("Time taken by my implementation: %.2fs\n", (doubl
 2054              		.loc 1 257 72 view .LVU524
 2055 0137 4C29F0   		subq	%r14, %rax	# tStart, tmp140
 2056              	# dgesv_gauss-elim_gcc_optimized.c:257:   printf("Time taken by my implementation: %.2fs\n", (doubl
 2057              		.loc 1 257 54 view .LVU525
 2058 013a C4E1EB2A 		vcvtsi2sdq	%rax, %xmm2, %xmm0	# tmp140, tmp168, tmp170
 2058      C0
 2059              	.LBB100:
 2060              	.LBB97:
 2061              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 2062              		.loc 2 107 10 view .LVU526
 2063 013f B8010000 		movl	$1, %eax	#,
 2063      00
 2064              	.LBE97:
 2065              	.LBE100:
 2066              	# dgesv_gauss-elim_gcc_optimized.c:257:   printf("Time taken by my implementation: %.2fs\n", (doubl
 2067              		.loc 1 257 3 view .LVU527
 2068 0144 C5FB5E05 		vdivsd	.LC9(%rip), %xmm0, %xmm0	#, tmp141, tmp142
 2068      00000000 
 2069              	.LBB101:
 2070              	.LBB98:
 2071              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 2072              		.loc 2 107 10 view .LVU528
 2073 014c E8000000 		call	__printf_chk@PLT	#
 2073      00
 2074              	.LVL155:
 2075              		.loc 2 107 10 view .LVU529
 2076              	.LBE98:
 2077              	.LBE101:
 2078              	.LBB102:
 2079              	.LBB103:
  34:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 2080              		.loc 1 34 14 is_stmt 1 view .LVU530
 2081              	# dgesv_gauss-elim_gcc_optimized.c:34:   for(i = 0; i < size*size; i++) {
  34:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 2082              		.loc 1 34 3 is_stmt 0 view .LVU531
 2083 0151 58       		popq	%rax	#
 2084              		.cfi_def_cfa_offset 104
 2085 0152 5A       		popq	%rdx	#
 2086              		.cfi_def_cfa_offset 96
 2087 0153 448B5C24 		movl	28(%rsp), %r11d	# %sfp, _5
 2087      1C
 2088 0158 4585DB   		testl	%r11d, %r11d	# _5
 2089 015b 746D     		je	.L105	#,
 2090 015d C5FB101D 		vmovsd	.LC0(%rip), %xmm3	#, tmp155
 2090      00000000 
 2091 0165 4963F3   		movslq	%r11d, %rsi	# _5, _93
 2092 0168 31D2     		xorl	%edx, %edx	# ivtmp.195
 2093 016a C5E857D2 		vxorps	%xmm2, %xmm2, %xmm2	# tmp168
 2094 016e EB09     		jmp	.L108	#
 2095              	.LVL156:
 2096              		.p2align 4,,10
 2097              		.p2align 3
 2098              	.L117:
  34:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 2099              		.loc 1 34 29 is_stmt 1 view .LVU532
  34:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 2100              		.loc 1 34 14 view .LVU533
 2101              	# dgesv_gauss-elim_gcc_optimized.c:34:   for(i = 0; i < size*size; i++) {
  34:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 2102              		.loc 1 34 3 is_stmt 0 view .LVU534
 2103 0170 4883C201 		addq	$1, %rdx	#, ivtmp.195
 2104              	.LVL157:
  34:dgesv_gauss-elim_gcc_optimized.c ****     if (!is_nearly_equal(bref[i], b[i]))
 2105              		.loc 1 34 3 view .LVU535
 2106 0174 4839D6   		cmpq	%rdx, %rsi	# ivtmp.195, _93
 2107 0177 7451     		je	.L105	#,
 2108              	.LVL158:
 2109              	.L108:
  35:dgesv_gauss-elim_gcc_optimized.c ****       return 0;
 2110              		.loc 1 35 5 is_stmt 1 view .LVU536
 2111              	# dgesv_gauss-elim_gcc_optimized.c:35:     if (!is_nearly_equal(bref[i], b[i]))
  35:dgesv_gauss-elim_gcc_optimized.c ****       return 0;
 2112              		.loc 1 35 10 is_stmt 0 view .LVU537
 2113 0179 C5FB1004 		vmovsd	(%rbx,%rdx,8), %xmm0	# MEM[base: bref_21, index: ivtmp.195_98, step: 8, offset: 0B], _48
 2113      D3
 2114              	.LVL159:
 2115              	.LBB104:
 2116              	.LBI104:
  23:dgesv_gauss-elim_gcc_optimized.c **** {
 2117              		.loc 1 23 5 is_stmt 1 view .LVU538
 2118              	.LBB105:
  25:dgesv_gauss-elim_gcc_optimized.c ****   return abs(x - y) <= epsilon * abs(x);
 2119              		.loc 1 25 3 view .LVU539
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 2120              		.loc 1 26 3 view .LVU540
 2121              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 2122              		.loc 1 26 16 is_stmt 0 view .LVU541
 2123 017e C5FB5C4C 		vsubsd	0(%rbp,%rdx,8), %xmm0, %xmm1	# MEM[base: b_25, index: ivtmp.195_98, step: 8, offset: 0B], _
 2123      D500
 2124              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 2125              		.loc 1 26 10 view .LVU542
 2126 0184 C5FB2CC1 		vcvttsd2sil	%xmm1, %eax	# tmp144, tmp145
 2127 0188 89C1     		movl	%eax, %ecx	# tmp145, tmp146
 2128 018a F7D9     		negl	%ecx	# tmp146
 2129 018c 39C8     		cmpl	%ecx, %eax	# tmp146, tmp145
 2130 018e 0F4CC1   		cmovl	%ecx, %eax	# tmp145,, tmp146, tmp147
 2131              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 2132              		.loc 1 26 21 view .LVU543
 2133 0191 C5EB2AC8 		vcvtsi2sdl	%eax, %xmm2, %xmm1	# tmp147, tmp168, tmp171
 2134              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 2135              		.loc 1 26 34 view .LVU544
 2136 0195 C5FB2CC0 		vcvttsd2sil	%xmm0, %eax	# _48, tmp149
 2137 0199 89C1     		movl	%eax, %ecx	# tmp149, tmp150
 2138 019b F7D9     		negl	%ecx	# tmp150
 2139 019d 39C8     		cmpl	%ecx, %eax	# tmp150, tmp149
 2140 019f 0F4CC1   		cmovl	%ecx, %eax	# tmp149,, tmp150, tmp151
 2141              	# dgesv_gauss-elim_gcc_optimized.c:26:   return abs(x - y) <= epsilon * abs(x);
  26:dgesv_gauss-elim_gcc_optimized.c ****   // see Knuth section 4.2.2 pages 217-218
 2142              		.loc 1 26 32 view .LVU545
 2143 01a2 C5EB2AC0 		vcvtsi2sdl	%eax, %xmm2, %xmm0	# tmp151, tmp168, tmp172
 2144 01a6 C5FB59C3 		vmulsd	%xmm3, %xmm0, %xmm0	# tmp155, tmp152, tmp153
 2145              	.LBE105:
 2146              	.LBE104:
 2147              	# dgesv_gauss-elim_gcc_optimized.c:35:     if (!is_nearly_equal(bref[i], b[i]))
  35:dgesv_gauss-elim_gcc_optimized.c ****       return 0;
 2148              		.loc 1 35 8 view .LVU546
 2149 01aa C5F92FC1 		vcomisd	%xmm1, %xmm0	# tmp148, tmp153
 2150 01ae 73C0     		jnb	.L117	#,
 2151              	.LVL160:
  35:dgesv_gauss-elim_gcc_optimized.c ****       return 0;
 2152              		.loc 1 35 8 view .LVU547
 2153              	.LBE103:
 2154              	.LBE102:
 258:dgesv_gauss-elim_gcc_optimized.c **** 
 259:dgesv_gauss-elim_gcc_optimized.c ****   if (check_result(bref, b, size) == 1)
 260:dgesv_gauss-elim_gcc_optimized.c ****     printf("Result is ok!\n");
 261:dgesv_gauss-elim_gcc_optimized.c ****   else
 262:dgesv_gauss-elim_gcc_optimized.c ****     printf("Result is wrong!\n");
 2155              		.loc 1 262 5 is_stmt 1 view .LVU548
 2156              	.LBB106:
 2157              	.LBI106:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 2158              		.loc 2 105 1 view .LVU549
 2159              	.LBB107:
 2160              		.loc 2 107 3 view .LVU550
 2161              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 2162              		.loc 2 107 10 is_stmt 0 view .LVU551
 2163 01b0 488D3D00 		leaq	.LC13(%rip), %rdi	#,
 2163      000000
 2164              	.LVL161:
 2165              	.L116:
 2166              		.loc 2 107 10 view .LVU552
 2167              	.LBE107:
 2168              	.LBE106:
 2169              	# dgesv_gauss-elim_gcc_optimized.c:263: }
 263:dgesv_gauss-elim_gcc_optimized.c **** }
 2170              		.loc 1 263 1 view .LVU553
 2171 01b7 4883C428 		addq	$40, %rsp	#,
 2172              		.cfi_remember_state
 2173              		.cfi_def_cfa_offset 56
 2174 01bb 5B       		popq	%rbx	#
 2175              		.cfi_def_cfa_offset 48
 2176              	.LVL162:
 2177              		.loc 1 263 1 view .LVU554
 2178 01bc 5D       		popq	%rbp	#
 2179              		.cfi_def_cfa_offset 40
 2180              	.LVL163:
 2181              		.loc 1 263 1 view .LVU555
 2182 01bd 415C     		popq	%r12	#
 2183              		.cfi_def_cfa_offset 32
 2184 01bf 415D     		popq	%r13	#
 2185              		.cfi_def_cfa_offset 24
 2186              	.LVL164:
 2187              		.loc 1 263 1 view .LVU556
 2188 01c1 415E     		popq	%r14	#
 2189              		.cfi_def_cfa_offset 16
 2190              	.LVL165:
 2191              		.loc 1 263 1 view .LVU557
 2192 01c3 415F     		popq	%r15	#
 2193              		.cfi_def_cfa_offset 8
 2194              	.LBB109:
 2195              	.LBB108:
 2196              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 2197              		.loc 2 107 10 view .LVU558
 2198 01c5 E9000000 		jmp	puts@PLT	#
 2198      00
 2199              	.LVL166:
 2200              	.L105:
 2201              		.cfi_restore_state
 2202              		.loc 2 107 10 view .LVU559
 2203              	.LBE108:
 2204              	.LBE109:
 260:dgesv_gauss-elim_gcc_optimized.c ****   else
 2205              		.loc 1 260 5 is_stmt 1 view .LVU560
 2206              	.LBB110:
 2207              	.LBI110:
 105:/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h **** {
 2208              		.loc 2 105 1 view .LVU561
 2209              	.LBB111:
 2210              		.loc 2 107 3 view .LVU562
 2211              	# /mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/stdio2.h:107:   return __pr
 2212              		.loc 2 107 10 is_stmt 0 view .LVU563
 2213 01ca 488D3D00 		leaq	.LC12(%rip), %rdi	#,
 2213      000000
 2214 01d1 EBE4     		jmp	.L116	#
 2215              	.LBE111:
 2216              	.LBE110:
 2217              		.cfi_endproc
 2218              	.LFE55:
 2220              		.section	.rodata.cst8,"aM",@progbits,8
 2221              		.align 8
 2222              	.LC0:
 2223 0000 F168E388 		.long	-1998362383
 2224 0004 B5F8E43E 		.long	1055193269
 2225              		.section	.rodata
 2226              		.align 64
 2227              	.LC1:
 2228 0000 00000000 		.long	0
 2229 0004 01000000 		.long	1
 2230 0008 02000000 		.long	2
 2231 000c 03000000 		.long	3
 2232 0010 04000000 		.long	4
 2233 0014 05000000 		.long	5
 2234 0018 06000000 		.long	6
 2235 001c 07000000 		.long	7
 2236 0020 08000000 		.long	8
 2237 0024 09000000 		.long	9
 2238 0028 0A000000 		.long	10
 2239 002c 0B000000 		.long	11
 2240 0030 0C000000 		.long	12
 2241 0034 0D000000 		.long	13
 2242 0038 0E000000 		.long	14
 2243 003c 0F000000 		.long	15
 2244              		.section	.rodata.cst32,"aM",@progbits,32
 2245              		.align 32
 2246              	.LC2:
 2247 0000 01000000 		.long	1
 2248 0004 02000000 		.long	2
 2249 0008 03000000 		.long	3
 2250 000c 04000000 		.long	4
 2251 0010 05000000 		.long	5
 2252 0014 06000000 		.long	6
 2253 0018 07000000 		.long	7
 2254 001c 08000000 		.long	8
 2255              		.section	.rodata
 2256              		.align 64
 2257              	.LC3:
 2258 0040 10000000 		.long	16
 2259 0044 10000000 		.long	16
 2260 0048 10000000 		.long	16
 2261 004c 10000000 		.long	16
 2262 0050 10000000 		.long	16
 2263 0054 10000000 		.long	16
 2264 0058 10000000 		.long	16
 2265 005c 10000000 		.long	16
 2266 0060 10000000 		.long	16
 2267 0064 10000000 		.long	16
 2268 0068 10000000 		.long	16
 2269 006c 10000000 		.long	16
 2270 0070 10000000 		.long	16
 2271 0074 10000000 		.long	16
 2272 0078 10000000 		.long	16
 2273 007c 10000000 		.long	16
 2274              		.align 64
 2275              	.LC4:
 2276 0080 01000000 		.long	1
 2277 0084 01000000 		.long	1
 2278 0088 01000000 		.long	1
 2279 008c 01000000 		.long	1
 2280 0090 01000000 		.long	1
 2281 0094 01000000 		.long	1
 2282 0098 01000000 		.long	1
 2283 009c 01000000 		.long	1
 2284 00a0 01000000 		.long	1
 2285 00a4 01000000 		.long	1
 2286 00a8 01000000 		.long	1
 2287 00ac 01000000 		.long	1
 2288 00b0 01000000 		.long	1
 2289 00b4 01000000 		.long	1
 2290 00b8 01000000 		.long	1
 2291 00bc 01000000 		.long	1
 2292              		.section	.rodata.cst8
 2293              		.align 8
 2294              	.LC9:
 2295 0008 00000000 		.long	0
 2296 000c 80842E41 		.long	1093567616
 2297              		.text
 2298              	.Letext0:
 2299              		.file 5 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/lib/gcc/x86_64-pc-linux-gnu/10.1
 2300              		.file 6 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/types.h"
 2301              		.file 7 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/bits/types/clock_t.h"
 2302              		.file 8 "<built-in>"
 2303              		.file 9 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/time.h"
 2304              		.file 10 "/mnt/netapp1/Optcesga_FT2_RHEL7/2020/gentoo/22072020/usr/include/openblas/lapacke.h"
